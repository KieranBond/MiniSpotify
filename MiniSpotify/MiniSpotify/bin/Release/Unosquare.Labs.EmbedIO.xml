<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Unosquare.Labs.EmbedIO</name>
    </assembly>
    <members>
        <member name="T:Unosquare.Labs.EmbedIO.ICookieCollection">
            <inheritdoc />
            <summary>
            Interface for Cookie Collection.
            </summary>
            <seealso cref="T:System.Collections.ICollection" />
        </member>
        <member name="P:Unosquare.Labs.EmbedIO.ICookieCollection.Item(System.String)">
            <summary>
            Gets the <see cref="T:System.Net.Cookie"/> with the specified name.
            </summary>
            <value>
            The <see cref="T:System.Net.Cookie"/>.
            </value>
            <param name="name">The name.</param>
            <returns>The cookie matching the specified name.</returns>
        </member>
        <member name="M:Unosquare.Labs.EmbedIO.ICookieCollection.Add(System.Net.Cookie)">
            <summary>
            Adds the specified cookie.
            </summary>
            <param name="cookie">The cookie.</param>
        </member>
        <member name="T:Unosquare.Labs.EmbedIO.IHttpBase">
            <summary>
            Interface to create a HTTP Request/Response.
            </summary>
        </member>
        <member name="P:Unosquare.Labs.EmbedIO.IHttpBase.Headers">
            <summary>
            Gets the headers.
            </summary>
            <value>
            The headers.
            </value>
        </member>
        <member name="P:Unosquare.Labs.EmbedIO.IHttpBase.Cookies">
            <summary>
            Gets the cookies.
            </summary>
            <value>
            The cookies.
            </value>
        </member>
        <member name="P:Unosquare.Labs.EmbedIO.IHttpBase.ProtocolVersion">
            <summary>
            Gets or sets the protocol version.
            </summary>
            <value>
            The protocol version.
            </value>
        </member>
        <member name="T:Unosquare.Labs.EmbedIO.IHttpContext">
            <summary>
            Interface to create a HTTP Context.
            </summary>
        </member>
        <member name="P:Unosquare.Labs.EmbedIO.IHttpContext.Request">
            <summary>
            Gets the HTTP Request.
            </summary>
            <value>
            The request.
            </value>
        </member>
        <member name="P:Unosquare.Labs.EmbedIO.IHttpContext.Response">
            <summary>
            Gets the HTTP Response.
            </summary>
            <value>
            The response.
            </value>
        </member>
        <member name="P:Unosquare.Labs.EmbedIO.IHttpContext.User">
            <summary>
            Gets the user.
            </summary>
            <value>
            The user.
            </value>
        </member>
        <member name="P:Unosquare.Labs.EmbedIO.IHttpContext.WebServer">
            <summary>
            Gets or sets the web server.
            </summary>
            <value>
            The web server.
            </value>
        </member>
        <member name="M:Unosquare.Labs.EmbedIO.IHttpContext.AcceptWebSocketAsync(System.Int32)">
            <summary>
            Accepts the web socket asynchronous.
            </summary>
            <param name="receiveBufferSize">Size of the receive buffer.</param>
            <returns>
            A <see cref="T:Unosquare.Labs.EmbedIO.IWebSocketContext" /> that represents
            the WebSocket handshake request.
            </returns>
        </member>
        <member name="T:Unosquare.Labs.EmbedIO.IHttpListener">
            <summary>
            Interface to create a HTTP Listener.
            </summary>
        </member>
        <member name="P:Unosquare.Labs.EmbedIO.IHttpListener.IgnoreWriteExceptions">
            <summary>
            Gets or sets a value indicating whether the listener should ignore write exceptions.
            </summary>
            <value>
            <c>true</c> if [ignore write exceptions]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Unosquare.Labs.EmbedIO.IHttpListener.Prefixes">
            <summary>
            Gets the prefixes.
            </summary>
            <value>
            The prefixes.
            </value>
        </member>
        <member name="P:Unosquare.Labs.EmbedIO.IHttpListener.IsListening">
            <summary>
            Gets a value indicating whether this instance is listening.
            </summary>
            <value>
              <c>true</c> if this instance is listening; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Unosquare.Labs.EmbedIO.IHttpListener.Name">
            <summary>
            Gets or sets the name.
            </summary>
            <value>
            The name.
            </value>
        </member>
        <member name="M:Unosquare.Labs.EmbedIO.IHttpListener.Start">
            <summary>
            Starts this listener.
            </summary>
        </member>
        <member name="M:Unosquare.Labs.EmbedIO.IHttpListener.Stop">
            <summary>
            Stops this listener.
            </summary>
        </member>
        <member name="M:Unosquare.Labs.EmbedIO.IHttpListener.AddPrefix(System.String)">
            <summary>
            Adds the prefix.
            </summary>
            <param name="urlPrefix">The URL prefix.</param>
        </member>
        <member name="M:Unosquare.Labs.EmbedIO.IHttpListener.GetContextAsync(System.Threading.CancellationToken)">
            <summary>
            Gets the HTTP context asynchronous.
            </summary>
            <param name="ct">The cancellation token.</param>
            <returns>
            A task that represents the time delay for the HTTP Context.
            </returns>
        </member>
        <member name="T:Unosquare.Labs.EmbedIO.IHttpRequest">
            <inheritdoc />
            <summary>
            Interface to create a HTTP Request.
            </summary>
        </member>
        <member name="P:Unosquare.Labs.EmbedIO.IHttpRequest.KeepAlive">
            <summary>
            Gets a value indicating whether [keep alive].
            </summary>
            <value>
              <c>true</c> if [keep alive]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Unosquare.Labs.EmbedIO.IHttpRequest.RawUrl">
            <summary>
            Gets the raw URL.
            </summary>
            <value>
            The raw URL.
            </value>
        </member>
        <member name="P:Unosquare.Labs.EmbedIO.IHttpRequest.QueryString">
            <summary>
            Gets the query string.
            </summary>
            <value>
            The query string.
            </value>
        </member>
        <member name="P:Unosquare.Labs.EmbedIO.IHttpRequest.HttpMethod">
            <summary>
            Gets the HTTP method.
            </summary>
            <value>
            The HTTP method.
            </value>
        </member>
        <member name="P:Unosquare.Labs.EmbedIO.IHttpRequest.Url">
            <summary>
            Gets the URL.
            </summary>
            <value>
            The URL.
            </value>
        </member>
        <member name="P:Unosquare.Labs.EmbedIO.IHttpRequest.HasEntityBody">
            <summary>
            Gets a value indicating whether this instance has entity body.
            </summary>
            <value>
              <c>true</c> if this instance has entity body; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Unosquare.Labs.EmbedIO.IHttpRequest.InputStream">
            <summary>
            Gets the input stream.
            </summary>
            <value>
            The input stream.
            </value>
        </member>
        <member name="P:Unosquare.Labs.EmbedIO.IHttpRequest.ContentEncoding">
            <summary>
            Gets the content encoding.
            </summary>
            <value>
            The content encoding.
            </value>
        </member>
        <member name="P:Unosquare.Labs.EmbedIO.IHttpRequest.RemoteEndPoint">
            <summary>
            Gets the remote end point.
            </summary>
            <value>
            The remote end point.
            </value>
        </member>
        <member name="P:Unosquare.Labs.EmbedIO.IHttpRequest.IsLocal">
            <summary>
            Gets a value indicating whether this instance is local.
            </summary>
            <value>
              <c>true</c> if this instance is local; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Unosquare.Labs.EmbedIO.IHttpRequest.UserAgent">
            <summary>
            Gets the user agent.
            </summary>
            <value>
            The user agent.
            </value>
        </member>
        <member name="P:Unosquare.Labs.EmbedIO.IHttpRequest.IsWebSocketRequest">
            <summary>
            Gets a value indicating whether this instance is web socket request.
            </summary>
            <value>
              <c>true</c> if this instance is web socket request; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Unosquare.Labs.EmbedIO.IHttpRequest.LocalEndPoint">
            <summary>
            Gets the local end point.
            </summary>
            <value>
            The local end point.
            </value>
        </member>
        <member name="P:Unosquare.Labs.EmbedIO.IHttpRequest.ContentType">
            <summary>
            Gets the type of the content.
            </summary>
            <value>
            The type of the content.
            </value>
        </member>
        <member name="P:Unosquare.Labs.EmbedIO.IHttpRequest.ContentLength64">
            <summary>
            Gets the content length64.
            </summary>
            <value>
            The content length64.
            </value>
        </member>
        <member name="P:Unosquare.Labs.EmbedIO.IHttpRequest.IsAuthenticated">
            <summary>
            Gets a value indicating whether this instance is authenticated.
            </summary>
            <value>
              <c>true</c> if this instance is authenticated; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Unosquare.Labs.EmbedIO.IHttpRequest.UrlReferrer">
            <summary>
            Gets the URL referrer.
            </summary>
            <value>
            The URL referrer.
            </value>
        </member>
        <member name="P:Unosquare.Labs.EmbedIO.IHttpRequest.RequestTraceIdentifier">
            <summary>
            Gets the request identifier of the incoming HTTP request.
            </summary>
            <value>
            The request trace identifier.
            </value>
        </member>
        <member name="T:Unosquare.Labs.EmbedIO.IHttpResponse">
            <inheritdoc />
            <summary>
            Interface to create a HTTP Response.
            </summary>
        </member>
        <member name="P:Unosquare.Labs.EmbedIO.IHttpResponse.StatusCode">
            <summary>
            Gets or sets the status code.
            </summary>
            <value>
            The status code.
            </value>
        </member>
        <member name="P:Unosquare.Labs.EmbedIO.IHttpResponse.ContentLength64">
            <summary>
            Gets or sets the content length64.
            </summary>
            <value>
            The content length64.
            </value>
        </member>
        <member name="P:Unosquare.Labs.EmbedIO.IHttpResponse.ContentType">
            <summary>
            Gets or sets the type of the content.
            </summary>
            <value>
            The type of the content.
            </value>
        </member>
        <member name="P:Unosquare.Labs.EmbedIO.IHttpResponse.OutputStream">
            <summary>
            Gets the output stream.
            </summary>
            <value>
            The output stream.
            </value>
        </member>
        <member name="P:Unosquare.Labs.EmbedIO.IHttpResponse.ContentEncoding">
            <summary>
            Gets or sets the content encoding.
            </summary>
            <value>
            The content encoding.
            </value>
        </member>
        <member name="P:Unosquare.Labs.EmbedIO.IHttpResponse.KeepAlive">
            <summary>
            Gets or sets a value indicating whether [keep alive].
            </summary>
            <value>
              <c>true</c> if [keep alive]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Unosquare.Labs.EmbedIO.IHttpResponse.StatusDescription">
            <summary>
            Gets or sets a text description of the HTTP status code.
            </summary>
            <value>
            The status description.
            </value>
        </member>
        <member name="M:Unosquare.Labs.EmbedIO.IHttpResponse.AddHeader(System.String,System.String)">
            <summary>
            Adds the header.
            </summary>
            <param name="headerName">Name of the header.</param>
            <param name="value">The value.</param>
        </member>
        <member name="M:Unosquare.Labs.EmbedIO.IHttpResponse.SetCookie(System.Net.Cookie)">
            <summary>
            Sets the cookie.
            </summary>
            <param name="sessionCookie">The session cookie.</param>
        </member>
        <member name="M:Unosquare.Labs.EmbedIO.IHttpResponse.Close">
            <summary>
            Closes this instance and dispose the resources.
            </summary>
        </member>
        <member name="T:Unosquare.Labs.EmbedIO.ISessionWebModule">
            <inheritdoc />
            <summary>
            Interface to create session modules.
            </summary>
        </member>
        <member name="P:Unosquare.Labs.EmbedIO.ISessionWebModule.Sessions">
            <summary>
            The dictionary holding the sessions
            Direct access is guaranteed to be thread-safe.
            </summary>
            <value>
            The sessions.
            </value>
        </member>
        <member name="P:Unosquare.Labs.EmbedIO.ISessionWebModule.Expiration">
            <summary>
            Gets or sets the expiration time for the sessions.
            </summary>
            <value>
            The expiration.
            </value>
        </member>
        <member name="M:Unosquare.Labs.EmbedIO.ISessionWebModule.GetSession(Unosquare.Labs.EmbedIO.IHttpContext)">
            <summary>
            Gets a session object for the given server context.
            If no session exists for the context, then null is returned.
            </summary>
            <param name="context">The context.</param>
            <returns>A session info for the given server context.</returns>
        </member>
        <member name="M:Unosquare.Labs.EmbedIO.ISessionWebModule.DeleteSession(Unosquare.Labs.EmbedIO.IHttpContext)">
            <summary>
            Delete the session object for the given context
            If no session exists for the context, then null is returned.
            </summary>
            <param name="context">The context.</param>
        </member>
        <member name="M:Unosquare.Labs.EmbedIO.ISessionWebModule.DeleteSession(Unosquare.Labs.EmbedIO.SessionInfo)">
            <summary>
            Delete a session for the given session info
            No exceptions are thrown if the session is not found.
            </summary>
            <param name="session">The session info.</param>
        </member>
        <member name="M:Unosquare.Labs.EmbedIO.ISessionWebModule.GetSession(Unosquare.Labs.EmbedIO.IWebSocketContext)">
            <summary>
            Gets a session object for the given WebSocket context.
            If no session exists for the context, then null is returned.
            </summary>
            <param name="context">The context.</param>
            <returns>A session object for the given WebSocket context.</returns>
        </member>
        <member name="T:Unosquare.Labs.EmbedIO.IWebModule">
            <summary>
            Interface to create web modules.
            </summary>
        </member>
        <member name="P:Unosquare.Labs.EmbedIO.IWebModule.Name">
            <summary>
            Gets the friendly name of the module.
            </summary>
            <value>
            The name.
            </value>
        </member>
        <member name="P:Unosquare.Labs.EmbedIO.IWebModule.Handlers">
            <summary>
            Gets the registered handlers.
            </summary>
            <value>
            The handlers.
            </value>
        </member>
        <member name="P:Unosquare.Labs.EmbedIO.IWebModule.Server">
            <summary>
            Gets the associated Web Server object.
            This property is automatically set when the module is registered.
            </summary>
            <value>
            The server.
            </value>
        </member>
        <member name="P:Unosquare.Labs.EmbedIO.IWebModule.IsWatchdogEnabled">
            <summary>
            Gets or sets a value indicating whether this instance is watchdog enabled.
            </summary>
            <value>
              <c>true</c> if this instance is watchdog enabled; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Unosquare.Labs.EmbedIO.IWebModule.WatchdogInterval">
            <summary>
            Gets or sets the watchdog interval.
            </summary>
            <value>
            The watchdog interval.
            </value>
        </member>
        <member name="P:Unosquare.Labs.EmbedIO.IWebModule.CancellationToken">
            <summary>
            Gets or sets the cancellation token.
            </summary>
            <value>
            The cancellation token.
            </value>
        </member>
        <member name="M:Unosquare.Labs.EmbedIO.IWebModule.AddHandler(System.String,Unosquare.Labs.EmbedIO.Constants.HttpVerbs,Unosquare.Labs.EmbedIO.WebHandler)">
            <summary>
            Adds a handler that gets called when a path and verb are matched.
            </summary>
            <param name="path">The path.</param>
            <param name="verb">The verb.</param>
            <param name="handler">The handler.</param>
            <exception cref="T:System.ArgumentNullException">
            path
            or
            handler.
            </exception>
        </member>
        <member name="M:Unosquare.Labs.EmbedIO.IWebModule.Start(System.Threading.CancellationToken)">
            <summary>
            Starts the Web Module.
            </summary>
            <param name="ct">The cancellation token.</param>
        </member>
        <member name="M:Unosquare.Labs.EmbedIO.IWebModule.RunWatchdog">
            <summary>
            Runs the watchdog.
            </summary>
        </member>
        <member name="T:Unosquare.Labs.EmbedIO.IWebServer">
             <summary>
             Interface to create a WebServer class.
            
             The basic behaviour for a WebServer is register/unregister modules and
             run asynchronous to receive incoming HTTP Requests.
             </summary>
        </member>
        <member name="P:Unosquare.Labs.EmbedIO.IWebServer.SessionModule">
             <summary>
             Gets registered SessionModule (if any).
            
             SessionModule is an implementation of <c>ISessionModule</c>
             to handle session data.
             </summary>  
             <value>
             The session module.
             </value>
        </member>
        <member name="P:Unosquare.Labs.EmbedIO.IWebServer.RoutingStrategy">
            <summary>
            Gets the URL RoutingStrategy used in this instance.
            
            By default it is set to Wildcard, but Regex is the recommended value.
            </summary>
            <value>
            The routing strategy.
            </value>
        </member>
        <member name="P:Unosquare.Labs.EmbedIO.IWebServer.Modules">
            <summary>
            Gets a list of registered modules.
            </summary>
            <value>
            The modules.
            </value>
        </member>
        <member name="P:Unosquare.Labs.EmbedIO.IWebServer.OnMethodNotAllowed">
            <summary>
            Gets or sets the on method not allowed.
            </summary>
            <value>
            The on method not allowed.
            </value>
        </member>
        <member name="P:Unosquare.Labs.EmbedIO.IWebServer.OnNotFound">
            <summary>
            Gets or sets the on not found.
            </summary>
            <value>
            The on not found.
            </value>
        </member>
        <member name="M:Unosquare.Labs.EmbedIO.IWebServer.Module``1">
            <summary>
            Gets the module registered for the given type.
            Returns null if no module matches the given type.
            </summary>
            <typeparam name="T">The type of module.</typeparam>
            <returns>Module registered for the given type.</returns>
        </member>
        <member name="M:Unosquare.Labs.EmbedIO.IWebServer.RegisterModule(Unosquare.Labs.EmbedIO.IWebModule)">
            <summary>
            Registers an instance of a web module. Only 1 instance per type is allowed.
            </summary>
            <param name="module">The module.</param>
        </member>
        <member name="M:Unosquare.Labs.EmbedIO.IWebServer.UnregisterModule(System.Type)">
            <summary>
            Unregisters the module identified by its type.
            </summary>
            <param name="moduleType">Type of the module.</param>
        </member>
        <member name="M:Unosquare.Labs.EmbedIO.IWebServer.RunAsync(System.Threading.CancellationToken)">
            <summary>
            Starts the listener and the registered modules.
            </summary>
            <param name="ct">The cancellation token; when cancelled, the server cancels all pending requests and stops.</param>
            <returns>
            Returns the task that the HTTP listener is running inside of, so that it can be waited upon after it's been canceled.
            </returns>
        </member>
        <member name="T:Unosquare.Labs.EmbedIO.IWebSocket">
            <inheritdoc />
            <summary>
            Interface to create a WebSocket implementation.
            </summary>
            <seealso cref="T:System.IDisposable" />
        </member>
        <member name="P:Unosquare.Labs.EmbedIO.IWebSocket.State">
            <summary>
            Gets the state.
            </summary>
            <value>
            The state.
            </value>
        </member>
        <member name="M:Unosquare.Labs.EmbedIO.IWebSocket.SendAsync(System.Byte[],System.Boolean,System.Threading.CancellationToken)">
            <summary>
            Sends the asynchronous.
            </summary>
            <param name="buffer">The buffer.</param>
            <param name="isText">if set to <c>true</c> [is text].</param>
            <param name="ct">The cancellation token.</param>
            <returns>
            A task that represents the asynchronous of send data using websocket.
            </returns>
        </member>
        <member name="M:Unosquare.Labs.EmbedIO.IWebSocket.CloseAsync(System.Threading.CancellationToken)">
            <summary>
            Closes the asynchronous.
            </summary>
            <param name="ct">The cancellation token.</param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="T:Unosquare.Labs.EmbedIO.IWebSocketContext">
            <summary>
            Interface to create a WebSocket Context.
            </summary>
        </member>
        <member name="P:Unosquare.Labs.EmbedIO.IWebSocketContext.WebSocket">
            <summary>
            Gets or sets the web socket.
            </summary>
            <value>
            The web socket.
            </value>
        </member>
        <member name="P:Unosquare.Labs.EmbedIO.IWebSocketContext.CookieCollection">
            <summary>
            Gets the cookie collection.
            </summary>
            <value>
            The cookie collection.
            </value>
        </member>
        <member name="P:Unosquare.Labs.EmbedIO.IWebSocketContext.RequestUri">
            <summary>
            Gets the request URI.
            </summary>
            <value>
            The request URI.
            </value>
        </member>
        <member name="T:Unosquare.Labs.EmbedIO.IWebSocketReceiveResult">
            <summary>
            Interface for WebSocket Receive Result object.
            </summary>
        </member>
        <member name="P:Unosquare.Labs.EmbedIO.IWebSocketReceiveResult.Count">
            <summary>
            Gets the count.
            </summary>
            <value>
            The count.
            </value>
        </member>
        <member name="P:Unosquare.Labs.EmbedIO.IWebSocketReceiveResult.EndOfMessage">
            <summary>
            Gets a value indicating whether [end of message].
            </summary>
            <value>
              <c>true</c> if [end of message]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Unosquare.Labs.EmbedIO.IWebSocketReceiveResult.MessageType">
            <summary>
            Gets the type of the message.
            </summary>
            <value>
            The type of the message.
            </value>
        </member>
        <member name="T:Unosquare.Labs.EmbedIO.Constants.CompressionMethod">
            <summary>
            Specifies the compression method used to compress a message on
            the WebSocket connection.
            </summary>
            <remarks>
            The compression methods that can be used are defined in
            <see href="https://tools.ietf.org/html/rfc7692">
            Compression Extensions for WebSocket</see>.
            </remarks>
        </member>
        <member name="F:Unosquare.Labs.EmbedIO.Constants.CompressionMethod.None">
            <summary>
            Specifies non compression.
            </summary>
        </member>
        <member name="F:Unosquare.Labs.EmbedIO.Constants.CompressionMethod.Deflate">
            <summary>
            Specifies DEFLATE.
            </summary>
        </member>
        <member name="F:Unosquare.Labs.EmbedIO.Constants.CompressionMethod.Gzip">
            <summary>
            Specifies GZIP.
            </summary>
        </member>
        <member name="T:Unosquare.Labs.EmbedIO.Constants.Headers">
            <summary>
            HTTP Header Constants.
            </summary>
        </member>
        <member name="F:Unosquare.Labs.EmbedIO.Constants.Headers.AccessControlAllowOrigin">
            <summary>
            Access-Control-Allow-Origin HTTP Header.
            </summary>
        </member>
        <member name="F:Unosquare.Labs.EmbedIO.Constants.Headers.AccessControlAllowHeaders">
            <summary>
            Access-Control-Allow-Headers HTTP Header.
            </summary>
        </member>
        <member name="F:Unosquare.Labs.EmbedIO.Constants.Headers.AccessControlAllowMethods">
            <summary>
            Access-Control-Allow-Methods HTTP Header.
            </summary>
        </member>
        <member name="F:Unosquare.Labs.EmbedIO.Constants.Headers.Origin">
            <summary>
            Origin HTTP Header.
            </summary>
        </member>
        <member name="F:Unosquare.Labs.EmbedIO.Constants.Headers.AccessControlRequestHeaders">
            <summary>
            Access-Control-Request-Headers HTTP Header.
            </summary>
        </member>
        <member name="F:Unosquare.Labs.EmbedIO.Constants.Headers.AccessControlRequestMethod">
            <summary>
            Access-Control-Request-Headers HTTP Method.
            </summary>
        </member>
        <member name="F:Unosquare.Labs.EmbedIO.Constants.Headers.Cookie">
            <summary>
            The cookie header.
            </summary>
        </member>
        <member name="F:Unosquare.Labs.EmbedIO.Constants.Headers.AcceptEncoding">
            <summary>
            Accept-Encoding HTTP Header.
            </summary>
        </member>
        <member name="F:Unosquare.Labs.EmbedIO.Constants.Headers.ContentEncoding">
            <summary>
            Content-Encoding HTTP Header.
            </summary>
        </member>
        <member name="F:Unosquare.Labs.EmbedIO.Constants.Headers.IfModifiedSince">
            <summary>
            If-Modified-Since HTTP Header.
            </summary>
        </member>
        <member name="F:Unosquare.Labs.EmbedIO.Constants.Headers.CacheControl">
            <summary>
            Cache-Control HTTP Header.
            </summary>
        </member>
        <member name="F:Unosquare.Labs.EmbedIO.Constants.Headers.Pragma">
            <summary>
            Pragma HTTP Header.
            </summary>
        </member>
        <member name="F:Unosquare.Labs.EmbedIO.Constants.Headers.Expires">
            <summary>
            Expires HTTP Header.
            </summary>
        </member>
        <member name="F:Unosquare.Labs.EmbedIO.Constants.Headers.LastModified">
            <summary>
            Last-Modified HTTP Header.
            </summary>
        </member>
        <member name="F:Unosquare.Labs.EmbedIO.Constants.Headers.IfNotMatch">
            <summary>
            If-None-Match HTTP Header.
            </summary>
        </member>
        <member name="F:Unosquare.Labs.EmbedIO.Constants.Headers.ETag">
            <summary>
            ETag HTTP Header.
            </summary>
        </member>
        <member name="F:Unosquare.Labs.EmbedIO.Constants.Headers.AcceptRanges">
            <summary>
            Accept-Ranges HTTP Header.
            </summary>
        </member>
        <member name="F:Unosquare.Labs.EmbedIO.Constants.Headers.Range">
            <summary>
            Range HTTP Header.
            </summary>
        </member>
        <member name="F:Unosquare.Labs.EmbedIO.Constants.Headers.ContentRanges">
            <summary>
            Content-Range HTTP Header.
            </summary>
        </member>
        <member name="F:Unosquare.Labs.EmbedIO.Constants.Headers.CompressionGzip">
            <summary>
            The header compression gzip.
            </summary>
        </member>
        <member name="F:Unosquare.Labs.EmbedIO.Constants.Headers.WebSocketKey">
            <summary>
            The web socket key.
            </summary>
        </member>
        <member name="F:Unosquare.Labs.EmbedIO.Constants.Headers.WebSocketVersion">
            <summary>
            The web socket version.
            </summary>
        </member>
        <member name="F:Unosquare.Labs.EmbedIO.Constants.Headers.WebSocketProtocol">
            <summary>
            The web socket protocol.
            </summary>
        </member>
        <member name="F:Unosquare.Labs.EmbedIO.Constants.Headers.WebSocketExtensions">
            <summary>
            The web socket extensions.
            </summary>
        </member>
        <member name="F:Unosquare.Labs.EmbedIO.Constants.Headers.WebSocketAccept">
            <summary>
            The web socket accept.
            </summary>
        </member>
        <member name="T:Unosquare.Labs.EmbedIO.Constants.HttpVerbs">
            <summary>
            Enumerates the different HTTP Verbs.
            </summary>
        </member>
        <member name="F:Unosquare.Labs.EmbedIO.Constants.HttpVerbs.Any">
            <summary>
            Wildcard Method
            </summary>
        </member>
        <member name="F:Unosquare.Labs.EmbedIO.Constants.HttpVerbs.Delete">
            <summary>
            DELETE Method
            </summary>
        </member>
        <member name="F:Unosquare.Labs.EmbedIO.Constants.HttpVerbs.Get">
            <summary>
            GET Method
            </summary>
        </member>
        <member name="F:Unosquare.Labs.EmbedIO.Constants.HttpVerbs.Head">
            <summary>
            HEAD method
            </summary>
        </member>
        <member name="F:Unosquare.Labs.EmbedIO.Constants.HttpVerbs.Options">
            <summary>
            OPTIONS method
            </summary>
        </member>
        <member name="F:Unosquare.Labs.EmbedIO.Constants.HttpVerbs.Patch">
            <summary>
            PATCH method
            </summary>
        </member>
        <member name="F:Unosquare.Labs.EmbedIO.Constants.HttpVerbs.Post">
            <summary>
            POST method
            </summary>
        </member>
        <member name="F:Unosquare.Labs.EmbedIO.Constants.HttpVerbs.Put">
            <summary>
            PUT method
            </summary>
        </member>
        <member name="T:Unosquare.Labs.EmbedIO.Constants.MimeTypes">
            <summary>
            Represents a MimeType collection.
            </summary>
        </member>
        <member name="F:Unosquare.Labs.EmbedIO.Constants.MimeTypes.DefaultMimeTypes">
            <summary>
            A big list of default MIME types.
            </summary>
            <remarks>
            Originally started from: http://stackoverflow.com/questions/1029740/get-mime-type-from-filename-extension.
            </remarks>
        </member>
        <member name="T:Unosquare.Labs.EmbedIO.Constants.Responses">
            <summary>
            Represents common responses Constants.
            </summary>
        </member>
        <member name="F:Unosquare.Labs.EmbedIO.Constants.Responses.Response404Html">
            <summary>
            Default Http Status 404 response output.
            </summary>
        </member>
        <member name="F:Unosquare.Labs.EmbedIO.Constants.Responses.Response405Html">
            <summary>
            Default Status Http 405 response output.
            </summary>
        </member>
        <member name="F:Unosquare.Labs.EmbedIO.Constants.Responses.Response500HtmlFormat">
            <summary>
            Default Http Status 500 response output:
            
            The first format argument takes the error message.
            The second format argument takes the stack trace.
            </summary>
        </member>
        <member name="T:Unosquare.Labs.EmbedIO.Constants.RoutingStrategy">
            <summary>
            Defines the routing strategy for URL matching
            This is especially useful for REST service implementations
            in the WebApi module.
            </summary>
        </member>
        <member name="F:Unosquare.Labs.EmbedIO.Constants.RoutingStrategy.Wildcard">
            <summary>
            The wildcard strategy
            </summary>
        </member>
        <member name="F:Unosquare.Labs.EmbedIO.Constants.RoutingStrategy.Regex">
            <summary>
            The Regex strategy, default one
            </summary>
        </member>
        <member name="T:Unosquare.Labs.EmbedIO.Constants.Strings">
            <summary>
            Defines assembly-wide constants.
            </summary>
        </member>
        <member name="F:Unosquare.Labs.EmbedIO.Constants.Strings.BrowserTimeFormat">
            <summary>
             Default Browser time format.
            </summary>
        </member>
        <member name="F:Unosquare.Labs.EmbedIO.Constants.Strings.CorsWildcard">
            <summary>
            Default CORS rule.
            </summary>
        </member>
        <member name="F:Unosquare.Labs.EmbedIO.Constants.Strings.CommaSplitChar">
            <summary>
            The comma split character for String.Split method calls.
            </summary>
        </member>
        <member name="F:Unosquare.Labs.EmbedIO.Constants.Strings.CookieSplitChars">
            <summary>
            The cookie split chars for String.Split method calls.
            </summary>
        </member>
        <member name="P:Unosquare.Labs.EmbedIO.Constants.Strings.StandardCultureInfo">
            <summary>
            The format culture used for header outputs.
            </summary>
        </member>
        <member name="P:Unosquare.Labs.EmbedIO.Constants.Strings.StandardStringComparer">
            <summary>
            The standard string comparer.
            </summary>
        </member>
        <member name="T:Unosquare.Labs.EmbedIO.CookieCollection">
            <summary>
            Represents a wrapper for <c>System.Net.CookieCollection</c>.
            </summary>
            <seealso cref="T:Unosquare.Labs.EmbedIO.ICookieCollection" />
        </member>
        <member name="M:Unosquare.Labs.EmbedIO.CookieCollection.#ctor(System.Net.CookieCollection)">
            <summary>
            Initializes a new instance of the <see cref="T:Unosquare.Labs.EmbedIO.CookieCollection"/> class.
            </summary>
            <param name="cookieCollection">The cookie collection.</param>
        </member>
        <member name="P:Unosquare.Labs.EmbedIO.CookieCollection.Count">
            <inheritdoc />
        </member>
        <member name="P:Unosquare.Labs.EmbedIO.CookieCollection.IsSynchronized">
            <inheritdoc />
        </member>
        <member name="P:Unosquare.Labs.EmbedIO.CookieCollection.SyncRoot">
            <inheritdoc />
        </member>
        <member name="P:Unosquare.Labs.EmbedIO.CookieCollection.Item(System.String)">
            <inheritdoc />
        </member>
        <member name="M:Unosquare.Labs.EmbedIO.CookieCollection.GetEnumerator">
            <inheritdoc />
        </member>
        <member name="M:Unosquare.Labs.EmbedIO.CookieCollection.CopyTo(System.Array,System.Int32)">
            <inheritdoc />
        </member>
        <member name="M:Unosquare.Labs.EmbedIO.CookieCollection.Add(System.Net.Cookie)">
            <inheritdoc />
        </member>
        <member name="M:Unosquare.Labs.EmbedIO.Core.FormDataParser.ParseAsDictionary(System.String,System.String)">
            <summary>
            Parses the form data given the request body string.
            </summary>
            <param name="requestBody">The request body.</param>
            <param name="contentTypeHeader">The content type header.</param>
            <returns>
            A collection that represents the request body string.
            </returns>
            <exception cref="T:System.NotImplementedException">multipart/form-data Content Type parsing is not yet implemented.</exception>
        </member>
        <member name="T:Unosquare.Labs.EmbedIO.Core.RamCache.RamCacheEntry">
            <summary>
            Represents a RAM Cache dictionary entry.
            </summary>
        </member>
        <member name="F:Unosquare.Labs.EmbedIO.Core.VirtualPaths.VirtualPathStatus.Invalid">
            <summary>
            The invalid
            </summary>
        </member>
        <member name="F:Unosquare.Labs.EmbedIO.Core.VirtualPaths.VirtualPathStatus.Forbidden">
            <summary>
            The forbidden
            </summary>
        </member>
        <member name="F:Unosquare.Labs.EmbedIO.Core.VirtualPaths.VirtualPathStatus.File">
            <summary>
            The file
            </summary>
        </member>
        <member name="F:Unosquare.Labs.EmbedIO.Core.VirtualPaths.VirtualPathStatus.Directory">
            <summary>
            The directory
            </summary>
        </member>
        <member name="T:Unosquare.Labs.EmbedIO.EasyRoutes">
            <summary>
            Extension methods to add easily routes to a <c>IWebServer</c>.
            </summary>
        </member>
        <member name="M:Unosquare.Labs.EmbedIO.EasyRoutes.OnAny(Unosquare.Labs.EmbedIO.IWebServer,Unosquare.Labs.EmbedIO.WebHandler)">
            <summary>
            Called when any unhandled request.
            Any verb and any path.
            </summary>
            <param name="webserver">The webserver.</param>
            <param name="action">The action.</param>
            <returns>
            The webserver instance.
            </returns>
            <exception cref="T:System.ArgumentNullException">webserver.</exception>
        </member>
        <member name="M:Unosquare.Labs.EmbedIO.EasyRoutes.OnPost(Unosquare.Labs.EmbedIO.IWebServer,Unosquare.Labs.EmbedIO.WebHandler)">
            <summary>
            Called when any POST unhandled request (any path).
            </summary>
            <param name="webserver">The webserver.</param>
            <param name="action">The action.</param>
            <returns>
            The webserver instance.
            </returns>
            <exception cref="T:System.ArgumentNullException">webserver.</exception>
        </member>
        <member name="M:Unosquare.Labs.EmbedIO.EasyRoutes.OnGet(Unosquare.Labs.EmbedIO.IWebServer,Unosquare.Labs.EmbedIO.WebHandler)">
            <summary>
            Called when any GET unhandled request (any path).
            </summary>
            <param name="webserver">The webserver.</param>
            <param name="action">The action.</param>
            <returns>
            The webserver instance.
            </returns>
            <exception cref="T:System.ArgumentNullException">webserver.</exception>
        </member>
        <member name="M:Unosquare.Labs.EmbedIO.EasyRoutes.OnPut(Unosquare.Labs.EmbedIO.IWebServer,Unosquare.Labs.EmbedIO.WebHandler)">
            <summary>
            Called when any PUT unhandled request (any path).
            </summary>
            <param name="webserver">The webserver.</param>
            <param name="action">The action.</param>
            <returns>
            The webserver instance.
            </returns>
            <exception cref="T:System.ArgumentNullException">webserver.</exception>
        </member>
        <member name="M:Unosquare.Labs.EmbedIO.EasyRoutes.OnDelete(Unosquare.Labs.EmbedIO.IWebServer,Unosquare.Labs.EmbedIO.WebHandler)">
            <summary>
            Called when any DELETE unhandled request (any path).
            </summary>
            <param name="webserver">The webserver.</param>
            <param name="action">The action.</param>
            <returns>
            The webserver instance.
            </returns>
            <exception cref="T:System.ArgumentNullException">webserver.</exception>
        </member>
        <member name="M:Unosquare.Labs.EmbedIO.EasyRoutes.OnHead(Unosquare.Labs.EmbedIO.IWebServer,Unosquare.Labs.EmbedIO.WebHandler)">
            <summary>
            Called when any HEAD unhandled request (any path).
            </summary>
            <param name="webserver">The webserver.</param>
            <param name="action">The action.</param>
            <returns>
            The webserver instance.
            </returns>
            <exception cref="T:System.ArgumentNullException">webserver.</exception>
        </member>
        <member name="M:Unosquare.Labs.EmbedIO.EasyRoutes.OnOptions(Unosquare.Labs.EmbedIO.IWebServer,Unosquare.Labs.EmbedIO.WebHandler)">
            <summary>
            Called when any OPTIONS unhandled request (any path).
            </summary>
            <param name="webserver">The webserver.</param>
            <param name="action">The action.</param>
            <returns>
            The webserver instance.
            </returns>
            <exception cref="T:System.ArgumentNullException">webserver.</exception>
        </member>
        <member name="M:Unosquare.Labs.EmbedIO.EasyRoutes.OnPatch(Unosquare.Labs.EmbedIO.IWebServer,Unosquare.Labs.EmbedIO.WebHandler)">
            <summary>
            Called when any PATCH unhandled request (any path).
            </summary>
            <param name="webserver">The webserver.</param>
            <param name="action">The action.</param>
            <returns>
            The webserver instance.
            </returns>
            <exception cref="T:System.ArgumentNullException">webserver.</exception>
        </member>
        <member name="T:Unosquare.Labs.EmbedIO.Extensions">
            <summary>
            Extension methods to help your coding.
            </summary>
            <summary>
            Extensions methods to EmbedIO's Fluent Interface.
            </summary>
            <summary>
            Extension methods to help your coding.
            </summary>
        </member>
        <member name="M:Unosquare.Labs.EmbedIO.Extensions.GetSession(Unosquare.Labs.EmbedIO.IHttpContext)">
            <summary>
            Gets the session object associated to the current context.
            Returns null if the LocalSessionWebModule has not been loaded.
            </summary>
            <param name="context">The context.</param>
            <returns>A session object for the given server context.</returns>
        </member>
        <member name="M:Unosquare.Labs.EmbedIO.Extensions.DeleteSession(Unosquare.Labs.EmbedIO.IHttpContext)">
            <summary>
            Deletes the session object associated to the current context.
            </summary>
            <param name="context">The context.</param>
        </member>
        <member name="M:Unosquare.Labs.EmbedIO.Extensions.DeleteSession(Unosquare.Labs.EmbedIO.IHttpContext,Unosquare.Labs.EmbedIO.SessionInfo)">
            <summary>
            Deletes the given session object.
            </summary>
            <param name="context">The context.</param>
            <param name="session">The session info.</param>
        </member>
        <member name="M:Unosquare.Labs.EmbedIO.Extensions.GetSession(Unosquare.Labs.EmbedIO.IWebSocketContext,Unosquare.Labs.EmbedIO.IWebServer)">
            <summary>
            Gets the session object associated to the current context.
            Returns null if the LocalSessionWebModule has not been loaded.
            </summary>
            <param name="context">The context.</param>
            <param name="server">The server.</param>
            <returns>A session info for the given websocket context.</returns>
        </member>
        <member name="M:Unosquare.Labs.EmbedIO.Extensions.GetSession(Unosquare.Labs.EmbedIO.IWebServer,Unosquare.Labs.EmbedIO.IWebSocketContext)">
            <summary>
            Gets the session.
            </summary>
            <param name="server">The server.</param>
            <param name="context">The context.</param>
            <returns>A session info for the given websocket context.</returns>
        </member>
        <member name="M:Unosquare.Labs.EmbedIO.Extensions.RequestPath(Unosquare.Labs.EmbedIO.IHttpContext)">
            <summary>
            Gets the request path for the specified context.
            </summary>
            <param name="context">The context.</param>
            <returns>Path for the specified context.</returns>
        </member>
        <member name="M:Unosquare.Labs.EmbedIO.Extensions.RequestWilcardPath(Unosquare.Labs.EmbedIO.IHttpContext,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Gets the request path for the specified context using a wildcard paths to 
            match.
            </summary>
            <param name="context">The context.</param>
            <param name="wildcardPaths">The wildcard paths.</param>
            <returns>Path for the specified context.</returns>
        </member>
        <member name="M:Unosquare.Labs.EmbedIO.Extensions.RequestPathCaseSensitive(Unosquare.Labs.EmbedIO.IHttpContext)">
            <summary>
            Gets the request path for the specified context case sensitive.
            </summary>
            <param name="context">The context.</param>
            <returns>Path for the specified context.</returns>
        </member>
        <member name="M:Unosquare.Labs.EmbedIO.Extensions.RequestVerb(Unosquare.Labs.EmbedIO.IHttpContext)">
            <summary>
            Retrieves the Request HTTP Verb (also called Method) of this context.
            </summary>
            <param name="context">The context.</param>
            <returns>HTTP verb result of the conversion of this context.</returns>
        </member>
        <member name="M:Unosquare.Labs.EmbedIO.Extensions.QueryString(Unosquare.Labs.EmbedIO.IHttpContext,System.String)">
            <summary>
            Gets the value for the specified query string key.
            If the value does not exist it returns null.
            </summary>
            <param name="context">The context.</param>
            <param name="key">The key.</param>
            <returns>A string that represents the value for the specified query string key.</returns>
        </member>
        <member name="M:Unosquare.Labs.EmbedIO.Extensions.InQueryString(Unosquare.Labs.EmbedIO.IHttpContext,System.String)">
            <summary>
            Determines if a key exists within the Request's query string.
            </summary>
            <param name="context">The context.</param>
            <param name="key">The key.</param>
            <returns><c>true</c> if a key exists within the Request's query string; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:Unosquare.Labs.EmbedIO.Extensions.RequestHeader(Unosquare.Labs.EmbedIO.IHttpContext,System.String)">
            <summary>
            Retrieves the specified request the header.
            </summary>
            <param name="context">The context.</param>
            <param name="headerName">Name of the header.</param>
            <returns>Specified request the header when is <c>true</c>; otherwise, empty string.</returns>
        </member>
        <member name="M:Unosquare.Labs.EmbedIO.Extensions.HasRequestHeader(Unosquare.Labs.EmbedIO.IHttpContext,System.String)">
            <summary>
            Determines whether [has request header] [the specified context].
            </summary>
            <param name="context">The context.</param>
            <param name="headerName">Name of the header.</param>
            <returns><c>true</c> if request headers is not a null; otherwise, false.</returns>
        </member>
        <member name="M:Unosquare.Labs.EmbedIO.Extensions.RequestBody(Unosquare.Labs.EmbedIO.IHttpContext)">
            <summary>
            Retrieves the request body as a string.
            Note that once this method returns, the underlying input stream cannot be read again as 
            it is not rewindable for obvious reasons. This functionality is by design.
            </summary>
            <param name="context">The context.</param>
            <returns>
            The rest of the stream as a string, from the current position to the end.
            If the current position is at the end of the stream, returns an empty string.
            </returns>
        </member>
        <member name="M:Unosquare.Labs.EmbedIO.Extensions.RequestBodyAsync(Unosquare.Labs.EmbedIO.IHttpContext)">
            <summary>
            Retrieves the request body as a string.
            Note that once this method returns, the underlying input stream cannot be read again as 
            it is not rewindable for obvious reasons. This functionality is by design.
            </summary>
            <param name="context">The context.</param>
            <returns>
            A task with the rest of the stream as a string, from the current position to the end.
            If the current position is at the end of the stream, returns an empty string.
            </returns>
        </member>
        <member name="M:Unosquare.Labs.EmbedIO.Extensions.RequestWildcardUrlParams(Unosquare.Labs.EmbedIO.IHttpContext,System.String)">
            <summary>
            Requests the wildcard URL parameters.
            </summary>
            <param name="context">The context.</param>
            <param name="basePath">The base path.</param>
            <returns>The params from the request.</returns>
        </member>
        <member name="M:Unosquare.Labs.EmbedIO.Extensions.RequestWildcardUrlParams(System.String,System.String)">
            <summary>
            Requests the wildcard URL parameters.
            </summary>
            <param name="requestPath">The request path.</param>
            <param name="basePath">The base path.</param>
            <returns>The params from the request.</returns>
        </member>
        <member name="M:Unosquare.Labs.EmbedIO.Extensions.RequestRegexUrlParams(Unosquare.Labs.EmbedIO.IWebSocketContext,System.String)">
            <summary>
            Requests the regex URL parameters.
            </summary>
            <param name="context">The context.</param>
            <param name="urlPattern">The url pattern. </param>
            <returns>The params from the request.</returns>
        </member>
        <member name="M:Unosquare.Labs.EmbedIO.Extensions.RequestRegexUrlParams(Unosquare.Labs.EmbedIO.IHttpContext,System.String)">
            <summary>
            Requests the regex URL parameters.
            </summary>
            <param name="context">The context.</param>
            <param name="basePath">The base path.</param>
            <returns>The params from the request.</returns>
        </member>
        <member name="M:Unosquare.Labs.EmbedIO.Extensions.RequestRegexUrlParams(System.String,System.String,System.Func{System.Boolean})">
            <summary>
            Requests the regex URL parameters.
            </summary>
            <param name="requestPath">The request path.</param>
            <param name="basePath">The base path.</param>
            <param name="validateFunc">The validate function.</param>
            <returns>
            The params from the request.
            </returns>
        </member>
        <member name="M:Unosquare.Labs.EmbedIO.Extensions.ParseJson``1(Unosquare.Labs.EmbedIO.IHttpContext)">
            <summary>
            Parses the JSON as a given type from the request body.
            Please note the underlying input stream is not rewindable.
            </summary>
            <typeparam name="T">The type of specified object type.</typeparam>
            <param name="context">The context.</param>
            <returns>
            Parses the JSON as a given type from the request body.
            </returns>
        </member>
        <member name="M:Unosquare.Labs.EmbedIO.Extensions.ParseJsonAsync``1(Unosquare.Labs.EmbedIO.IHttpContext)">
            <summary>
            Parses the JSON as a given type from the request body.
            Please note the underlying input stream is not rewindable.
            </summary>
            <typeparam name="T">The type of specified object type.</typeparam>
            <param name="context">The context.</param>
            <returns>
            A task with the JSON as a given type from the request body.
            </returns>
        </member>
        <member name="M:Unosquare.Labs.EmbedIO.Extensions.AcceptGzip(Unosquare.Labs.EmbedIO.IHttpContext,System.Int64)">
            <summary>
            Check if the Http Request can be gzipped (ignore audio and video content type).
            </summary>
            <param name="context">The context.</param>
            <param name="length">The length.</param>
            <returns><c>true</c> if a request can be gzipped; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:Unosquare.Labs.EmbedIO.Extensions.RequestFormDataDictionary(System.String)">
            <summary>
            Returns a dictionary of KVPs from Request data.
            </summary>
            <param name="requestBody">The request body.</param>
            <returns>A collection that represents KVPs from request data.</returns>
        </member>
        <member name="M:Unosquare.Labs.EmbedIO.Extensions.RequestFormDataDictionary(Unosquare.Labs.EmbedIO.IHttpContext)">
            <summary>
            Returns dictionary from Request POST data
            Please note the underlying input stream is not rewindable.
            </summary>
            <param name="context">The context to request body as string.</param>
            <returns>A collection that represents KVPs from request data.</returns>
        </member>
        <member name="M:Unosquare.Labs.EmbedIO.Extensions.RequestFormDataDictionaryAsync(Unosquare.Labs.EmbedIO.IHttpContext)">
            <summary>
            Returns dictionary from Request POST data
            Please note the underlying input stream is not rewindable.
            </summary>
            <param name="context">The context to request body as string.</param>
            <returns>A task with a collection that represents KVPs from request data.</returns>
        </member>
        <member name="M:Unosquare.Labs.EmbedIO.Extensions.CompressAsync(System.IO.Stream,Unosquare.Labs.EmbedIO.Constants.CompressionMethod,System.IO.Compression.CompressionMode,System.Threading.CancellationToken)">
            <summary>
            Compresses the specified buffer stream using the G-Zip compression algorithm.
            </summary>
            <param name="buffer">The buffer.</param>
            <param name="method">The method.</param>
            <param name="mode">The mode.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            A task representing the block of bytes of compressed stream.
            </returns>
        </member>
        <member name="M:Unosquare.Labs.EmbedIO.Extensions.WithStaticFolderAt(Unosquare.Labs.EmbedIO.IWebServer,System.String,System.String,System.Boolean)">
            <summary>
            Add the StaticFilesModule to the specified WebServer.
            </summary>
            <param name="webserver">The webserver instance.</param>
            <param name="rootPath">The static folder path.</param>
            <param name="defaultDocument">The default document name.</param>
            <param name="useDirectoryBrowser">if set to <c>true</c> [use directory browser].</param>
            <returns>
            An instance of webserver.
            </returns>
            <exception cref="T:System.ArgumentNullException">webserver.</exception>
        </member>
        <member name="M:Unosquare.Labs.EmbedIO.Extensions.WithVirtualPaths(Unosquare.Labs.EmbedIO.IWebServer,System.Collections.Generic.Dictionary{System.String,System.String},System.String)">
            <summary>
            Add the StaticFilesModule with multiple paths.
            </summary>
            <param name="webserver">The webserver.</param>
            <param name="virtualPaths">The virtual paths.</param>
            <param name="defaultDocument">The default document.</param>
            <returns>An instance of a web module.</returns>
            <exception cref="T:System.ArgumentNullException">webserver.</exception>
        </member>
        <member name="M:Unosquare.Labs.EmbedIO.Extensions.WithLocalSession(Unosquare.Labs.EmbedIO.IWebServer)">
            <summary>
            Add StaticFilesModule to WebServer.
            </summary>
            <param name="webserver">The webserver instance.</param>
            <returns>An instance of a web module.</returns>
            <exception cref="T:System.ArgumentNullException">webserver.</exception>
        </member>
        <member name="M:Unosquare.Labs.EmbedIO.Extensions.WithWebApi(Unosquare.Labs.EmbedIO.IWebServer,System.Reflection.Assembly)">
            <summary>
            Add WebApiModule to WebServer.
            </summary>
            <param name="webserver">The webserver instance.</param>
            <param name="assembly">The assembly to load WebApi Controllers from. Leave null to avoid autoloading.</param>
            <returns>An instance of webserver.</returns>
            <exception cref="T:System.ArgumentNullException">webserver.</exception>
        </member>
        <member name="M:Unosquare.Labs.EmbedIO.Extensions.WithWebSocket(Unosquare.Labs.EmbedIO.IWebServer,System.Reflection.Assembly)">
            <summary>
            Add WebSocketsModule to WebServer.
            </summary>
            <param name="webserver">The webserver instance.</param>
            <param name="assembly">The assembly to load Web Sockets from. Leave null to avoid autoloading.</param>
            <returns>An instance of webserver.</returns>
            <exception cref="T:System.ArgumentNullException">webserver.</exception>
        </member>
        <member name="M:Unosquare.Labs.EmbedIO.Extensions.LoadApiControllers(Unosquare.Labs.EmbedIO.IWebServer,System.Reflection.Assembly)">
            <summary>
            Load all the WebApi Controllers in an assembly.
            </summary>
            <param name="webserver">The webserver instance.</param>
            <param name="assembly">The assembly to load WebApi Controllers from. Leave null to load from the currently executing assembly.</param>
            <returns>An instance of webserver.</returns>
            <exception cref="T:System.ArgumentNullException">webserver.</exception>
        </member>
        <member name="M:Unosquare.Labs.EmbedIO.Extensions.LoadApiControllers(Unosquare.Labs.EmbedIO.Modules.WebApiModule,System.Reflection.Assembly)">
            <summary>
            Load all the WebApi Controllers in an assembly.
            </summary>
            <param name="apiModule">The Web API Module instance.</param>
            <param name="assembly">The assembly to load WebApi Controllers from. Leave null to load from the currently executing assembly.</param>
            <returns>The webserver instance.</returns>
            <exception cref="T:System.ArgumentNullException">webserver.</exception>
        </member>
        <member name="M:Unosquare.Labs.EmbedIO.Extensions.LoadWebSockets(Unosquare.Labs.EmbedIO.IWebServer,System.Reflection.Assembly)">
            <summary>
            Load all the WebSockets in an assembly.
            </summary>
            <param name="webserver">The webserver instance.</param>
            <param name="assembly">The assembly to load WebSocketsServer types from. Leave null to load from the currently executing assembly.</param>
            <returns>An instance of webserver.</returns>
            <exception cref="T:System.ArgumentNullException">webserver.</exception>
        </member>
        <member name="M:Unosquare.Labs.EmbedIO.Extensions.EnableCors(Unosquare.Labs.EmbedIO.IWebServer,System.String,System.String,System.String)">
            <summary>
            Enables CORS in the WebServer.
            </summary>
            <param name="webserver">The webserver instance.</param>
            <param name="origins">The valid origins, default all.</param>
            <param name="headers">The valid headers, default all.</param>
            <param name="methods">The valid method, default all.</param>
            <returns>An instance of the tiny web server used to handle request.</returns>
            <exception cref="T:System.ArgumentNullException">webserver.</exception>
        </member>
        <member name="M:Unosquare.Labs.EmbedIO.Extensions.WithWebApiController``1(Unosquare.Labs.EmbedIO.IWebServer)">
            <summary>
            Add WebApi Controller to WebServer.
            </summary>
            <typeparam name="T">The type of Web API Controller.</typeparam>
            <param name="webserver">The webserver instance.</param>
            <returns>An instance of webserver.</returns>
            <exception cref="T:System.ArgumentNullException">webserver.</exception>
        </member>
        <member name="M:Unosquare.Labs.EmbedIO.Extensions.NoCache(Unosquare.Labs.EmbedIO.IHttpContext)">
            <summary>
            Sends headers to disable caching on the client side.
            </summary>
            <param name="context">The context.</param>
        </member>
        <member name="M:Unosquare.Labs.EmbedIO.Extensions.NoCache(Unosquare.Labs.EmbedIO.IHttpResponse)">
            <summary>
            Sends headers to disable caching on the client side.
            </summary>
            <param name="response">The response.</param>
        </member>
        <member name="M:Unosquare.Labs.EmbedIO.Extensions.Redirect(Unosquare.Labs.EmbedIO.IHttpContext,System.String,System.Boolean)">
            <summary>
            Sets a response static code of 302 and adds a Location header to the response
            in order to direct the client to a different URL.
            </summary>
            <param name="context">The context.</param>
            <param name="location">The location.</param>
            <param name="useAbsoluteUrl">if set to <c>true</c> [use absolute URL].</param>
            <returns><b>true</b> if the headers were set, otherwise <b>false</b>.</returns>
        </member>
        <member name="M:Unosquare.Labs.EmbedIO.Extensions.JsonResponse(Unosquare.Labs.EmbedIO.IHttpContext,System.Object)">
            <summary>
            Outputs a Json Response given a data object.
            </summary>
            <param name="context">The context.</param>
            <param name="data">The data.</param>
            <returns>A <c>true</c> value if the response output was set.</returns>
        </member>
        <member name="M:Unosquare.Labs.EmbedIO.Extensions.JsonResponseAsync(Unosquare.Labs.EmbedIO.IHttpContext,System.Object,System.Threading.CancellationToken,System.Boolean)">
            <summary>
            Outputs async a Json Response given a data object.
            </summary>
            <param name="context">The context.</param>
            <param name="data">The data.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <param name="useGzip">if set to <c>true</c> [use gzip].</param>
            <returns>A <c>true</c> value if the response output was set.</returns>
        </member>
        <member name="M:Unosquare.Labs.EmbedIO.Extensions.JsonResponse(Unosquare.Labs.EmbedIO.IHttpContext,System.String)">
            <summary>
            Outputs a Json Response given a Json string.
            </summary>
            <param name="context">The context.</param>
            <param name="json">The JSON.</param>
            <returns>A <c>true</c> value if the response output was set.</returns>
        </member>
        <member name="M:Unosquare.Labs.EmbedIO.Extensions.JsonResponseAsync(Unosquare.Labs.EmbedIO.IHttpContext,System.String,System.Threading.CancellationToken,System.Boolean)">
            <summary>
            Outputs async a JSON Response given a JSON string.
            </summary>
            <param name="context">The context.</param>
            <param name="json">The JSON.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <param name="useGzip">if set to <c>true</c> [use gzip].</param>
            <returns>A task for writing the output stream.</returns>
        </member>
        <member name="M:Unosquare.Labs.EmbedIO.Extensions.HtmlResponseAsync(Unosquare.Labs.EmbedIO.IHttpContext,System.String,System.Net.HttpStatusCode,System.Threading.CancellationToken,System.Boolean)">
            <summary>
            Outputs a HTML Response given a HTML content.
            </summary>
            <param name="context">The context.</param>
            <param name="htmlContent">Content of the HTML.</param>
            <param name="statusCode">The status code.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <param name="useGzip">if set to <c>true</c> [use gzip].</param>
            <returns>A task for writing the output stream.</returns>
        </member>
        <member name="M:Unosquare.Labs.EmbedIO.Extensions.JsonExceptionResponse(Unosquare.Labs.EmbedIO.IHttpContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Outputs async a JSON Response given an exception.
            </summary>
            <param name="context">The context.</param>
            <param name="ex">The ex.</param>
            <param name="statusCode">The status code.</param>
            <returns>A <c>true</c> value when the exception is written to the HTTP Response.</returns>
        </member>
        <member name="M:Unosquare.Labs.EmbedIO.Extensions.JsonExceptionResponseAsync(Unosquare.Labs.EmbedIO.IHttpContext,System.Exception,System.Net.HttpStatusCode,System.Boolean)">
            <summary>
            Outputs a JSON Response given an exception.
            </summary>
            <param name="context">The context.</param>
            <param name="ex">The ex.</param>
            <param name="statusCode">The status code.</param>
            <param name="useGzip">if set to <c>true</c> [use gzip].</param>
            <returns>A task for writing the output stream.</returns>
        </member>
        <member name="M:Unosquare.Labs.EmbedIO.Extensions.StringResponseAsync(Unosquare.Labs.EmbedIO.IHttpContext,System.String,System.String,System.Threading.CancellationToken,System.Text.Encoding,System.Boolean)">
            <summary>
            Outputs async a string response given a string.
            </summary>
            <param name="context">The context.</param>
            <param name="content">The content.</param>
            <param name="contentType">Type of the content.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <param name="encoding">The encoding.</param>
            <param name="useGzip">if set to <c>true</c> [use gzip].</param>
            <returns>
            A task for writing the output stream.
            </returns>
        </member>
        <member name="M:Unosquare.Labs.EmbedIO.Extensions.StringResponseAsync(Unosquare.Labs.EmbedIO.IHttpResponse,System.String,System.String,System.Threading.CancellationToken,System.Text.Encoding,System.Boolean)">
            <summary>
            Outputs async a string response given a string.
            </summary>
            <param name="response">The response.</param>
            <param name="content">The content.</param>
            <param name="contentType">Type of the content.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <param name="encoding">The encoding.</param>
            <param name="useGzip">if set to <c>true</c> [use gzip].</param>
            <returns>
            A task for writing the output stream.
            </returns>
        </member>
        <member name="M:Unosquare.Labs.EmbedIO.Extensions.FileResponseAsync(Unosquare.Labs.EmbedIO.IHttpContext,System.IO.FileInfo,System.String,System.Threading.CancellationToken,System.Boolean)">
            <summary>
            Writes a binary response asynchronous.
            </summary>
            <param name="context">The context.</param>
            <param name="file">The file.</param>
            <param name="contentType">Type of the content.</param>
            <param name="ct">The ct.</param>
            <param name="useGzip">if set to <c>true</c> [use gzip].</param>
            <returns>
            A task for writing the output stream.
            </returns>
        </member>
        <member name="M:Unosquare.Labs.EmbedIO.Extensions.BinaryResponseAsync(Unosquare.Labs.EmbedIO.IHttpContext,System.IO.Stream,System.Threading.CancellationToken,System.Boolean)">
            <summary>
            Writes a binary response asynchronous.
            </summary>
            <param name="context">The context.</param>
            <param name="buffer">The buffer.</param>
            <param name="ct">The ct.</param>
            <param name="useGzip">if set to <c>true</c> [use gzip].</param>
            <returns>
            A task for writing the output stream.
            </returns>
        </member>
        <member name="M:Unosquare.Labs.EmbedIO.Extensions.BinaryResponseAsync(Unosquare.Labs.EmbedIO.IHttpResponse,System.IO.Stream,System.Threading.CancellationToken,System.Boolean)">
            <summary>
            Writes a binary response asynchronous.
            </summary>
            <param name="response">The response.</param>
            <param name="buffer">The buffer.</param>
            <param name="ct">The ct.</param>
            <param name="useGzip">if set to <c>true</c> [use gzip].</param>
            <returns>A task for writing the output stream.</returns>
        </member>
        <member name="M:Unosquare.Labs.EmbedIO.Extensions.WriteToOutputStream(Unosquare.Labs.EmbedIO.IHttpResponse,System.IO.Stream,System.Int64,System.Threading.CancellationToken)">
            <summary>
            Writes to output stream.
            </summary>
            <param name="response">The response.</param>
            <param name="buffer">The buffer.</param>
            <param name="lowerByteIndex">Index of the lower byte.</param>
            <param name="ct">The ct.</param>
            <returns>A task representing the write operation to the stream.</returns>
        </member>
        <member name="T:Unosquare.Labs.EmbedIO.HttpContext">
            <summary>
            Represents a wrapper around a regular HttpListenerContext.
            </summary>
            <seealso cref="T:Unosquare.Labs.EmbedIO.IHttpContext" />
        </member>
        <member name="M:Unosquare.Labs.EmbedIO.HttpContext.#ctor(System.Net.HttpListenerContext)">
            <summary>
            Initializes a new instance of the <see cref="T:Unosquare.Labs.EmbedIO.HttpContext" /> class.
            </summary>
            <param name="context">The context.</param>
        </member>
        <member name="P:Unosquare.Labs.EmbedIO.HttpContext.Request">
            <inheritdoc />
        </member>
        <member name="P:Unosquare.Labs.EmbedIO.HttpContext.Response">
            <inheritdoc />
        </member>
        <member name="P:Unosquare.Labs.EmbedIO.HttpContext.User">
            <inheritdoc />
        </member>
        <member name="P:Unosquare.Labs.EmbedIO.HttpContext.WebServer">
            <inheritdoc />
        </member>
        <member name="M:Unosquare.Labs.EmbedIO.HttpContext.AcceptWebSocketAsync(System.Int32)">
            <inheritdoc />
        </member>
        <member name="M:Unosquare.Labs.EmbedIO.HttpHandler.HandleClientRequest(System.Threading.CancellationToken)">
            <summary>
            Handles the client request.
            </summary>
            <param name="ct">The cancellation token.</param>
            <returns>A task that represents the asynchronous of client request.</returns>
        </member>
        <member name="T:Unosquare.Labs.EmbedIO.HttpListener">
            <summary>
            Represents a wrapper for Microsoft HTTP Listener.
            </summary>
        </member>
        <member name="P:Unosquare.Labs.EmbedIO.HttpListener.IgnoreWriteExceptions">
            <inheritdoc />
        </member>
        <member name="P:Unosquare.Labs.EmbedIO.HttpListener.Prefixes">
            <inheritdoc />
        </member>
        <member name="P:Unosquare.Labs.EmbedIO.HttpListener.IsListening">
            <inheritdoc />
        </member>
        <member name="P:Unosquare.Labs.EmbedIO.HttpListener.Name">
            <inheritdoc />
        </member>
        <member name="M:Unosquare.Labs.EmbedIO.HttpListener.Start">
            <inheritdoc />
        </member>
        <member name="M:Unosquare.Labs.EmbedIO.HttpListener.Stop">
            <inheritdoc />
        </member>
        <member name="M:Unosquare.Labs.EmbedIO.HttpListener.AddPrefix(System.String)">
            <inheritdoc />
        </member>
        <member name="M:Unosquare.Labs.EmbedIO.HttpListener.GetContextAsync(System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="T:Unosquare.Labs.EmbedIO.HttpListenerFactory">
            <summary>
            Represents a Factory to create a HTTP Listener.
            </summary>
        </member>
        <member name="M:Unosquare.Labs.EmbedIO.HttpListenerFactory.Create(System.Security.Cryptography.X509Certificates.X509Certificate)">
            <summary>
            Creates this instance with the default mode.
            The default HTTP Listener is Microsoft for net47 and
            netstandard2.0 target frameworks, otherwise EmbedIO.
            </summary>
            <param name="certificate">The certificate.</param>
            <returns>
            A HTTP Listener.
            </returns>
        </member>
        <member name="M:Unosquare.Labs.EmbedIO.HttpListenerFactory.Create(Unosquare.Labs.EmbedIO.HttpListenerMode,System.Security.Cryptography.X509Certificates.X509Certificate)">
            <summary>
            Creates the specified mode.
            </summary>
            <param name="mode">The mode.</param>
            <param name="certificate">The certificate.</param>
            <returns>
            A HTTP Listener.
            </returns>
            <exception cref="T:System.ArgumentOutOfRangeException">mode - null.</exception>
        </member>
        <member name="T:Unosquare.Labs.EmbedIO.HttpListenerMode">
            <summary>
            Enums all the HTTP listener available.
            </summary>
        </member>
        <member name="F:Unosquare.Labs.EmbedIO.HttpListenerMode.EmbedIO">
            <summary>
            The EmbedIO mode
            </summary>
        </member>
        <member name="F:Unosquare.Labs.EmbedIO.HttpListenerMode.Microsoft">
            <summary>
            The Microsoft mode
            </summary>
        </member>
        <member name="T:Unosquare.Labs.EmbedIO.HttpRequest">
            <summary>
            Represents a wrapper for HttpListenerContext.Request.
            </summary>
            <seealso cref="T:Unosquare.Labs.EmbedIO.IHttpRequest" />
        </member>
        <member name="M:Unosquare.Labs.EmbedIO.HttpRequest.#ctor(System.Net.HttpListenerContext)">
            <summary>
            Initializes a new instance of the <see cref="T:Unosquare.Labs.EmbedIO.HttpRequest"/> class.
            </summary>
            <param name="context">The context.</param>
        </member>
        <member name="P:Unosquare.Labs.EmbedIO.HttpRequest.Headers">
            <inheritdoc />
        </member>
        <member name="P:Unosquare.Labs.EmbedIO.HttpRequest.ProtocolVersion">
            <inheritdoc />
        </member>
        <member name="P:Unosquare.Labs.EmbedIO.HttpRequest.KeepAlive">
            <inheritdoc />
        </member>
        <member name="P:Unosquare.Labs.EmbedIO.HttpRequest.Cookies">
            <inheritdoc />
        </member>
        <member name="P:Unosquare.Labs.EmbedIO.HttpRequest.RawUrl">
            <inheritdoc />
        </member>
        <member name="P:Unosquare.Labs.EmbedIO.HttpRequest.QueryString">
            <inheritdoc />
        </member>
        <member name="P:Unosquare.Labs.EmbedIO.HttpRequest.HttpMethod">
            <inheritdoc />
        </member>
        <member name="P:Unosquare.Labs.EmbedIO.HttpRequest.Url">
            <inheritdoc />
        </member>
        <member name="P:Unosquare.Labs.EmbedIO.HttpRequest.HasEntityBody">
            <inheritdoc />
        </member>
        <member name="P:Unosquare.Labs.EmbedIO.HttpRequest.InputStream">
            <inheritdoc />
        </member>
        <member name="P:Unosquare.Labs.EmbedIO.HttpRequest.ContentEncoding">
            <inheritdoc />
        </member>
        <member name="P:Unosquare.Labs.EmbedIO.HttpRequest.RemoteEndPoint">
            <inheritdoc />
        </member>
        <member name="P:Unosquare.Labs.EmbedIO.HttpRequest.IsLocal">
            <inheritdoc />
        </member>
        <member name="P:Unosquare.Labs.EmbedIO.HttpRequest.UserAgent">
            <inheritdoc />
        </member>
        <member name="P:Unosquare.Labs.EmbedIO.HttpRequest.IsWebSocketRequest">
            <inheritdoc />
        </member>
        <member name="P:Unosquare.Labs.EmbedIO.HttpRequest.LocalEndPoint">
            <inheritdoc />
        </member>
        <member name="P:Unosquare.Labs.EmbedIO.HttpRequest.ContentType">
            <inheritdoc />
        </member>
        <member name="P:Unosquare.Labs.EmbedIO.HttpRequest.ContentLength64">
            <inheritdoc />
        </member>
        <member name="P:Unosquare.Labs.EmbedIO.HttpRequest.IsAuthenticated">
            <inheritdoc />
        </member>
        <member name="P:Unosquare.Labs.EmbedIO.HttpRequest.UrlReferrer">
            <inheritdoc />
        </member>
        <member name="P:Unosquare.Labs.EmbedIO.HttpRequest.RequestTraceIdentifier">
            <inheritdoc />
        </member>
        <member name="T:Unosquare.Labs.EmbedIO.HttpResponse">
            <summary>
            Represents a wrapper for HttpListenerContext.Response.
            </summary>
            <seealso cref="T:Unosquare.Labs.EmbedIO.IHttpResponse" />
        </member>
        <member name="M:Unosquare.Labs.EmbedIO.HttpResponse.#ctor(System.Net.HttpListenerContext)">
            <summary>
            Initializes a new instance of the <see cref="T:Unosquare.Labs.EmbedIO.HttpResponse"/> class.
            </summary>
            <param name="context">The context.</param>
        </member>
        <member name="P:Unosquare.Labs.EmbedIO.HttpResponse.Headers">
            <inheritdoc />
        </member>
        <member name="P:Unosquare.Labs.EmbedIO.HttpResponse.StatusCode">
            <inheritdoc />
        </member>
        <member name="P:Unosquare.Labs.EmbedIO.HttpResponse.ContentLength64">
            <inheritdoc />
        </member>
        <member name="P:Unosquare.Labs.EmbedIO.HttpResponse.ContentType">
            <inheritdoc />
        </member>
        <member name="P:Unosquare.Labs.EmbedIO.HttpResponse.OutputStream">
            <inheritdoc />
        </member>
        <member name="P:Unosquare.Labs.EmbedIO.HttpResponse.Cookies">
            <inheritdoc />
        </member>
        <member name="P:Unosquare.Labs.EmbedIO.HttpResponse.ContentEncoding">
            <inheritdoc />
        </member>
        <member name="P:Unosquare.Labs.EmbedIO.HttpResponse.KeepAlive">
            <inheritdoc />
        </member>
        <member name="P:Unosquare.Labs.EmbedIO.HttpResponse.ProtocolVersion">
            <inheritdoc />
        </member>
        <member name="P:Unosquare.Labs.EmbedIO.HttpResponse.StatusDescription">
            <inheritdoc />
        </member>
        <member name="M:Unosquare.Labs.EmbedIO.HttpResponse.AddHeader(System.String,System.String)">
            <inheritdoc />
        </member>
        <member name="M:Unosquare.Labs.EmbedIO.HttpResponse.SetCookie(System.Net.Cookie)">
            <inheritdoc />
        </member>
        <member name="M:Unosquare.Labs.EmbedIO.HttpResponse.Close">
            <inheritdoc />
        </member>
        <member name="T:Unosquare.Labs.EmbedIO.ModuleMap">
            <inheritdoc />
            <summary>
            Represents a list which binds Paths and their corresponding HTTP Verbs to Method calls.
            </summary>
        </member>
        <member name="F:Unosquare.Labs.EmbedIO.ModuleMap.AnyPath">
            <summary>
            Defines the path used to bind to all paths.
            </summary>
        </member>
        <member name="T:Unosquare.Labs.EmbedIO.Map">
            <summary>
            Represents a binding of path and verb to a given method call (delegate).
            </summary>
        </member>
        <member name="P:Unosquare.Labs.EmbedIO.Map.Path">
            <summary>
            The HTTP resource path.
            </summary>
        </member>
        <member name="P:Unosquare.Labs.EmbedIO.Map.Verb">
            <summary>
            The HTTP Verb of this Map.
            </summary>
        </member>
        <member name="P:Unosquare.Labs.EmbedIO.Map.ResponseHandler">
            <summary>
            The delegate to call for the given path and verb.
            </summary>
        </member>
        <member name="T:Unosquare.Labs.EmbedIO.Modules.AuthModule">
            <summary>
            Simple authorization module that requests http auth from client
            will return 401 + WWW-Authenticate header if request isn't authorized.
            </summary>
        </member>
        <member name="M:Unosquare.Labs.EmbedIO.Modules.AuthModule.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Unosquare.Labs.EmbedIO.Modules.AuthModule"/> class.
            </summary>
            <param name="username">The username.</param>
            <param name="password">The password.</param>
        </member>
        <member name="M:Unosquare.Labs.EmbedIO.Modules.AuthModule.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Unosquare.Labs.EmbedIO.Modules.AuthModule"/> class.
            </summary>
        </member>
        <member name="P:Unosquare.Labs.EmbedIO.Modules.AuthModule.Name">
            <inheritdoc />
        </member>
        <member name="M:Unosquare.Labs.EmbedIO.Modules.AuthModule.IsAuthorized(Unosquare.Labs.EmbedIO.IHttpRequest)">
            <summary>
            Validates request and returns <c>true</c> if that account data registered in this module and request has auth data.
            </summary>
            <param name="request">The HTTP Request.</param>
            <returns>
            <c>true</c> if request authorized, otherwise <c>false</c>.
            </returns>
        </member>
        <member name="M:Unosquare.Labs.EmbedIO.Modules.AuthModule.AddAccount(System.String,System.String)">
            <summary>
            Add new account.
            </summary>
            <param name="username">account username.</param>
            <param name="password">account password.</param>
        </member>
        <member name="M:Unosquare.Labs.EmbedIO.Modules.AuthModule.GetAccountData(Unosquare.Labs.EmbedIO.IHttpRequest)">
            <summary>
            Parses request for account data.
            </summary>
            <param name="request">The HTTP Request.</param>
            <returns>user-password KeyValuePair from request.</returns>
            <exception>
            if request isn't authorized.
            </exception>
        </member>
        <member name="T:Unosquare.Labs.EmbedIO.Modules.CorsModule">
            <summary>
            CORS control Module.
            Cross-origin resource sharing (CORS) is a mechanism that allows restricted resources (e.g. fonts) 
            on a web page to be requested from another domain outside the domain from which the resource originated.
            </summary>
        </member>
        <member name="M:Unosquare.Labs.EmbedIO.Modules.CorsModule.#ctor(System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Unosquare.Labs.EmbedIO.Modules.CorsModule"/> class.
            </summary>
            <param name="origins">The origins.</param>
            <param name="headers">The headers.</param>
            <param name="methods">The methods.</param>
            <exception cref="T:System.ArgumentNullException">
            origins
            or
            headers
            or
            methods.
            </exception>
        </member>
        <member name="P:Unosquare.Labs.EmbedIO.Modules.CorsModule.Name">
            <inheritdoc />
        </member>
        <member name="T:Unosquare.Labs.EmbedIO.Modules.FallbackModule">
            <summary>
            Represents a module to fallback any request.
            </summary>
            <seealso cref="T:Unosquare.Labs.EmbedIO.WebModuleBase" />
        </member>
        <member name="M:Unosquare.Labs.EmbedIO.Modules.FallbackModule.#ctor(System.Func{Unosquare.Labs.EmbedIO.IHttpContext,System.Threading.CancellationToken,System.Boolean},Unosquare.Labs.EmbedIO.Constants.HttpVerbs)">
            <summary>
            Initializes a new instance of the <see cref="T:Unosquare.Labs.EmbedIO.Modules.FallbackModule" /> class.
            </summary>
            <param name="action">The action.</param>
            <param name="verb">The verb.</param>
        </member>
        <member name="M:Unosquare.Labs.EmbedIO.Modules.FallbackModule.#ctor(Unosquare.Labs.EmbedIO.WebHandler,Unosquare.Labs.EmbedIO.Constants.HttpVerbs)">
            <summary>
            Initializes a new instance of the <see cref="T:Unosquare.Labs.EmbedIO.Modules.FallbackModule" /> class.
            </summary>
            <param name="action">The action.</param>
            <param name="verb">The verb.</param>
        </member>
        <member name="M:Unosquare.Labs.EmbedIO.Modules.FallbackModule.#ctor(System.String,Unosquare.Labs.EmbedIO.Constants.HttpVerbs)">
            <summary>
            Initializes a new instance of the <see cref="T:Unosquare.Labs.EmbedIO.Modules.FallbackModule" /> class.
            </summary>
            <param name="redirectUrl">The redirect URL.</param>
            <param name="verb">The verb.</param>
            <exception cref="T:System.ArgumentNullException">redirectUrl.</exception>
        </member>
        <member name="M:Unosquare.Labs.EmbedIO.Modules.FallbackModule.#ctor(System.IO.FileInfo,System.String,Unosquare.Labs.EmbedIO.Constants.HttpVerbs)">
            <summary>
            Initializes a new instance of the <see cref="T:Unosquare.Labs.EmbedIO.Modules.FallbackModule" /> class.
            </summary>
            <param name="file">The file.</param>
            <param name="contentType">Type of the content.</param>
            <param name="verb">The verb.</param>
            <exception cref="T:System.ArgumentNullException">file</exception>
        </member>
        <member name="P:Unosquare.Labs.EmbedIO.Modules.FallbackModule.Name">
            <inheritdoc />
        </member>
        <member name="P:Unosquare.Labs.EmbedIO.Modules.FallbackModule.RedirectUrl">
            <summary>
            Gets the redirect URL.
            </summary>
        </member>
        <member name="T:Unosquare.Labs.EmbedIO.Modules.FileModuleBase">
            <summary>
            Represents a files module base.
            </summary>
            <seealso cref="T:Unosquare.Labs.EmbedIO.WebModuleBase" />
        </member>
        <member name="P:Unosquare.Labs.EmbedIO.Modules.FileModuleBase.MimeTypes">
            <summary>
            Gets the collection holding the MIME types.
            </summary>
            <value>
            The MIME types.
            </value>
        </member>
        <member name="P:Unosquare.Labs.EmbedIO.Modules.FileModuleBase.DefaultHeaders">
            <summary>
            The default headers.
            </summary>
        </member>
        <member name="P:Unosquare.Labs.EmbedIO.Modules.FileModuleBase.UseGzip">
            <summary>
            Gets or sets a value indicating whether [use gzip].
            </summary>
            <value>
              <c>true</c> if [use gzip]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="M:Unosquare.Labs.EmbedIO.Modules.FileModuleBase.WriteFileAsync(System.String,Unosquare.Labs.EmbedIO.IHttpResponse,System.IO.Stream,System.Threading.CancellationToken,System.Boolean)">
            <summary>
            Writes the file asynchronous.
            </summary>
            <param name="partialHeader">The partial header.</param>
            <param name="response">The response.</param>
            <param name="buffer">The buffer.</param>
            <param name="ct">The cancellation token.</param>
            <param name="useGzip">if set to <c>true</c> [use gzip].</param>
            <returns>
            A task representing the write action.
            </returns>
        </member>
        <member name="M:Unosquare.Labs.EmbedIO.Modules.FileModuleBase.SetDefaultCacheHeaders(Unosquare.Labs.EmbedIO.IHttpResponse)">
            <summary>
            Sets the default cache headers.
            </summary>
            <param name="response">The response.</param>
        </member>
        <member name="M:Unosquare.Labs.EmbedIO.Modules.FileModuleBase.SetGeneralHeaders(Unosquare.Labs.EmbedIO.IHttpResponse,System.String,System.String)">
            <summary>
            Sets the general headers.
            </summary>
            <param name="response">The response.</param>
            <param name="utcFileDateString">The UTC file date string.</param>
            <param name="fileExtension">The file extension.</param>
        </member>
        <member name="T:Unosquare.Labs.EmbedIO.Modules.LocalSessionModule">
            <summary>
            A simple module to handle in-memory sessions. Do not use for distributed applications.
            </summary>
        </member>
        <member name="F:Unosquare.Labs.EmbedIO.Modules.LocalSessionModule.SessionCookieName">
            <summary>
            Defines the session cookie name.
            </summary>
        </member>
        <member name="F:Unosquare.Labs.EmbedIO.Modules.LocalSessionModule._sessions">
            <summary>
            The concurrent dictionary holding the sessions.
            </summary>
        </member>
        <member name="M:Unosquare.Labs.EmbedIO.Modules.LocalSessionModule.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Unosquare.Labs.EmbedIO.Modules.LocalSessionModule"/> class.
            </summary>
        </member>
        <member name="P:Unosquare.Labs.EmbedIO.Modules.LocalSessionModule.Sessions">
            <inheritdoc />
        </member>
        <member name="P:Unosquare.Labs.EmbedIO.Modules.LocalSessionModule.Expiration">
            <summary>
            Gets or sets the expiration.
            By default, expiration is 30 minutes.
            </summary>
            <inheritdoc />
        </member>
        <member name="P:Unosquare.Labs.EmbedIO.Modules.LocalSessionModule.CookiePath">
            <summary>
            Gets or sets the cookie path.
            If left empty, a cookie will be created for each path. The default value is "/"
            If a route is specified, then session cookies will be created only for the given path.
            Examples of this are:
                "/"
                "/app1/".
            </summary>
            <value>
            The cookie path.
            </value>
        </member>
        <member name="P:Unosquare.Labs.EmbedIO.Modules.LocalSessionModule.Name">
            <inheritdoc />
        </member>
        <member name="P:Unosquare.Labs.EmbedIO.Modules.LocalSessionModule.Item(System.String)">
            <summary>
            Gets the <see cref="T:Unosquare.Labs.EmbedIO.SessionInfo"/> with the specified cookie value.
            Returns null when the session is not found.
            </summary>
            <value>
            The <see cref="T:Unosquare.Labs.EmbedIO.SessionInfo"/>.
            </value>
            <param name="cookieValue">The cookie value.</param>
            <returns>Session info with the specified cookie value.</returns>
        </member>
        <member name="M:Unosquare.Labs.EmbedIO.Modules.LocalSessionModule.RunWatchdog">
            <inheritdoc />
        </member>
        <member name="M:Unosquare.Labs.EmbedIO.Modules.LocalSessionModule.GetSession(Unosquare.Labs.EmbedIO.IHttpContext)">
            <inheritdoc />
        </member>
        <member name="M:Unosquare.Labs.EmbedIO.Modules.LocalSessionModule.GetSession(Unosquare.Labs.EmbedIO.IWebSocketContext)">
            <inheritdoc />
        </member>
        <member name="M:Unosquare.Labs.EmbedIO.Modules.LocalSessionModule.DeleteSession(Unosquare.Labs.EmbedIO.IHttpContext)">
            <inheritdoc />
        </member>
        <member name="M:Unosquare.Labs.EmbedIO.Modules.LocalSessionModule.DeleteSession(Unosquare.Labs.EmbedIO.SessionInfo)">
            <inheritdoc />
        </member>
        <member name="M:Unosquare.Labs.EmbedIO.Modules.LocalSessionModule.CreateSession">
            <summary>
            Creates a session ID, registers the session info in the Sessions collection, and returns the appropriate session cookie.
            </summary>
            <returns>The sessions.</returns>
        </member>
        <member name="M:Unosquare.Labs.EmbedIO.Modules.LocalSessionModule.FixUpSessionCookie(Unosquare.Labs.EmbedIO.IHttpContext)">
            <summary>
            Fixes the session cookie to match the correct value.
            System.Net.Cookie.Value only supports a single value and we need to pick the one that potentially exists.
            </summary>
            <param name="context">The context.</param>
        </member>
        <member name="T:Unosquare.Labs.EmbedIO.Modules.ResourceFilesModule">
            <summary>
            Represents a simple module to server resource files from the .NET assembly.
            </summary>
        </member>
        <member name="M:Unosquare.Labs.EmbedIO.Modules.ResourceFilesModule.#ctor(System.Reflection.Assembly,System.String,System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
            Initializes a new instance of the <see cref="T:Unosquare.Labs.EmbedIO.Modules.ResourceFilesModule" /> class.
            </summary>
            <param name="sourceAssembly">The source assembly.</param>
            <param name="resourcePath">The resource path.</param>
            <param name="headers">The headers.</param>
            <exception cref="T:System.ArgumentNullException">sourceAssembly.</exception>
            <exception cref="T:System.ArgumentException">Path ' + fileSystemPath + ' does not exist.</exception>
        </member>
        <member name="P:Unosquare.Labs.EmbedIO.Modules.ResourceFilesModule.Name">
            <inheritdoc />
        </member>
        <member name="T:Unosquare.Labs.EmbedIO.Modules.StaticFilesModule">
            <summary>
            Represents a simple module to server static files from the file system.
            </summary>
        </member>
        <member name="F:Unosquare.Labs.EmbedIO.Modules.StaticFilesModule.DefaultDocumentName">
            <summary>
            Default document constant to "index.html".
            </summary>
        </member>
        <member name="F:Unosquare.Labs.EmbedIO.Modules.StaticFilesModule.MaxEntryLength">
            <summary>
            Maximal length of entry in DirectoryBrowser.
            </summary>
        </member>
        <member name="F:Unosquare.Labs.EmbedIO.Modules.StaticFilesModule.SizeIndent">
            <summary>
            How many characters used after time in DirectoryBrowser.
            </summary>
        </member>
        <member name="M:Unosquare.Labs.EmbedIO.Modules.StaticFilesModule.#ctor(System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
            Initializes a new instance of the <see cref="T:Unosquare.Labs.EmbedIO.Modules.StaticFilesModule"/> class.
            </summary>
            <param name="paths">The paths.</param>
        </member>
        <member name="M:Unosquare.Labs.EmbedIO.Modules.StaticFilesModule.#ctor(System.String,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Unosquare.Labs.EmbedIO.Modules.StaticFilesModule" /> class.
            </summary>
            <param name="fileSystemPath">The file system path.</param>
            <param name="useDirectoryBrowser">if set to <c>true</c> [use directory browser].</param>
        </member>
        <member name="M:Unosquare.Labs.EmbedIO.Modules.StaticFilesModule.#ctor(System.String,System.Collections.Generic.Dictionary{System.String,System.String},System.Collections.Generic.Dictionary{System.String,System.String},System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Unosquare.Labs.EmbedIO.Modules.StaticFilesModule" /> class.
            </summary>
            <param name="fileSystemPath">The file system path.</param>
            <param name="headers">The headers to set in every request.</param>
            <param name="additionalPaths">The additional paths.</param>
            <param name="useDirectoryBrowser">if set to <c>true</c> [use directory browser].</param>
            <exception cref="T:System.ArgumentException">Path ' + fileSystemPath + ' does not exist.</exception>
        </member>
        <member name="P:Unosquare.Labs.EmbedIO.Modules.StaticFilesModule.MaxRamCacheFileSize">
            <summary>
            Gets or sets the maximum size of the ram cache file. The default value is 250kb.
            </summary>
            <value>
            The maximum size of the ram cache file.
            </value>
        </member>
        <member name="P:Unosquare.Labs.EmbedIO.Modules.StaticFilesModule.DefaultDocument">
            <summary>
            Gets or sets the default document.
            Defaults to "index.html"
            Example: "root.xml".
            </summary>
            <value>
            The default document.
            </value>
        </member>
        <member name="P:Unosquare.Labs.EmbedIO.Modules.StaticFilesModule.DefaultExtension">
            <summary>
            Gets or sets the default extension.
            Defaults to null
            Example: ".html".
            </summary>
            <value>
            The default extension.
            </value>
        </member>
        <member name="P:Unosquare.Labs.EmbedIO.Modules.StaticFilesModule.FileSystemPath">
            <summary>
            Gets the file system path from which files are retrieved.
            </summary>
            <value>
            The file system path.
            </value>
        </member>
        <member name="P:Unosquare.Labs.EmbedIO.Modules.StaticFilesModule.UseRamCache">
            <summary>
            Gets or sets a value indicating whether or not to use the RAM Cache feature
            RAM Cache will only cache files that are MaxRamCacheSize in bytes or less.
            </summary>
            <value>
              <c>true</c> if [use ram cache]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Unosquare.Labs.EmbedIO.Modules.StaticFilesModule.VirtualPaths">
            <summary>
            Gets the virtual paths.
            </summary>
            <value>
            The virtual paths.
            </value>
        </member>
        <member name="P:Unosquare.Labs.EmbedIO.Modules.StaticFilesModule.Name">
            <inheritdoc />
        </member>
        <member name="P:Unosquare.Labs.EmbedIO.Modules.StaticFilesModule.RamCache">
            <summary>
            Private collection holding the contents of the RAM Cache.
            </summary>
            <value>
            The ram cache.
            </value>
        </member>
        <member name="M:Unosquare.Labs.EmbedIO.Modules.StaticFilesModule.RegisterVirtualPath(System.String,System.String)">
            <summary>
            Registers the virtual path.
            </summary>
            <param name="virtualPath">The virtual path.</param>
            <param name="physicalPath">The physical path.</param>
            <exception cref="T:System.InvalidOperationException">
            Is thrown when a method call is invalid for the object's current state.
            </exception>
        </member>
        <member name="M:Unosquare.Labs.EmbedIO.Modules.StaticFilesModule.UnregisterVirtualPath(System.String)">
            <summary>
            Unregisters the virtual path.
            </summary>
            <param name="virtualPath">The virtual path.</param>
            <exception cref="T:System.InvalidOperationException">
            Is thrown when a method call is invalid for the object's current state.
            </exception>
        </member>
        <member name="M:Unosquare.Labs.EmbedIO.Modules.StaticFilesModule.ClearRamCache">
            <summary>
            Clears the RAM cache.
            </summary>
        </member>
        <member name="T:Unosquare.Labs.EmbedIO.Modules.WebApiController">
            <inheritdoc />
            <summary>
            Inherit from this class and define your own Web API methods
            You must RegisterController in the Web API Module to make it active.
            </summary>
        </member>
        <member name="M:Unosquare.Labs.EmbedIO.Modules.WebApiController.#ctor(Unosquare.Labs.EmbedIO.IHttpContext)">
            <summary>
            Initializes a new instance of the <see cref="T:Unosquare.Labs.EmbedIO.Modules.WebApiController"/> class.
            </summary>
            <param name="context">The context.</param>
        </member>
        <member name="P:Unosquare.Labs.EmbedIO.Modules.WebApiController.Request">
            <inheritdoc />
        </member>
        <member name="P:Unosquare.Labs.EmbedIO.Modules.WebApiController.Response">
            <inheritdoc />
        </member>
        <member name="P:Unosquare.Labs.EmbedIO.Modules.WebApiController.User">
            <inheritdoc />
        </member>
        <member name="P:Unosquare.Labs.EmbedIO.Modules.WebApiController.WebServer">
            <inheritdoc />
        </member>
        <member name="M:Unosquare.Labs.EmbedIO.Modules.WebApiController.AcceptWebSocketAsync(System.Int32)">
            <inheritdoc />
        </member>
        <member name="M:Unosquare.Labs.EmbedIO.Modules.WebApiController.SetDefaultHeaders">
             <summary>
             Sets the default headers to the Web API response.
             By default will set:
            
             Expires - Mon, 26 Jul 1997 05:00:00 GMT
             LastModified - (Current Date)
             CacheControl - no-store, no-cache, must-revalidate
             Pragma - no-cache
            
             Previous values are defined to avoid caching from client.
             </summary>
        </member>
        <member name="T:Unosquare.Labs.EmbedIO.Modules.WebApiHandlerAttribute">
            <summary>
            Decorate methods within controllers with this attribute in order to make them callable from the Web API Module
            Method Must match the WebServerModule.
            </summary>
        </member>
        <member name="M:Unosquare.Labs.EmbedIO.Modules.WebApiHandlerAttribute.#ctor(Unosquare.Labs.EmbedIO.Constants.HttpVerbs,System.String[])">
            <summary>
            Initializes a new instance of the <see cref="T:Unosquare.Labs.EmbedIO.Modules.WebApiHandlerAttribute"/> class.
            </summary>
            <param name="verb">The verb.</param>
            <param name="paths">The paths.</param>
            <exception cref="T:System.ArgumentException">The argument 'paths' must be specified.</exception>
        </member>
        <member name="M:Unosquare.Labs.EmbedIO.Modules.WebApiHandlerAttribute.#ctor(Unosquare.Labs.EmbedIO.Constants.HttpVerbs,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Unosquare.Labs.EmbedIO.Modules.WebApiHandlerAttribute"/> class.
            </summary>
            <param name="verb">The verb.</param>
            <param name="path">The path.</param>
            <exception cref="T:System.ArgumentException">The argument 'path' must be specified.</exception>
        </member>
        <member name="P:Unosquare.Labs.EmbedIO.Modules.WebApiHandlerAttribute.Verb">
            <summary>
            Gets or sets the verb.
            </summary>
            <value>
            The verb.
            </value>
        </member>
        <member name="P:Unosquare.Labs.EmbedIO.Modules.WebApiHandlerAttribute.Paths">
            <summary>
            Gets or sets the paths.
            </summary>
            <value>
            The paths.
            </value>
        </member>
        <member name="T:Unosquare.Labs.EmbedIO.Modules.WebApiModule">
            <summary>
            A very simple module to register class methods as handlers.
            Public instance methods that match the WebServerModule.ResponseHandler signature, and have the WebApi handler attribute
            will be used to respond to web server requests.
            </summary>
        </member>
        <member name="M:Unosquare.Labs.EmbedIO.Modules.WebApiModule.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Unosquare.Labs.EmbedIO.Modules.WebApiModule"/> class.
            </summary>
        </member>
        <member name="P:Unosquare.Labs.EmbedIO.Modules.WebApiModule.Name">
            <inheritdoc />
        </member>
        <member name="P:Unosquare.Labs.EmbedIO.Modules.WebApiModule.ControllersCount">
            <summary>
            Gets the number of controller objects registered in this API.
            </summary>
        </member>
        <member name="M:Unosquare.Labs.EmbedIO.Modules.WebApiModule.RegisterController``1">
            <summary>
            Registers the controller.
            </summary>
            <typeparam name="T">The type of register controller.</typeparam>
            <exception cref="T:System.ArgumentException">Controller types must be unique within the module.</exception>
        </member>
        <member name="M:Unosquare.Labs.EmbedIO.Modules.WebApiModule.RegisterController``1(System.Func{Unosquare.Labs.EmbedIO.IHttpContext,``0})">
            <summary>
            Registers the controller.
            </summary>
            <typeparam name="T">The type of register controller.</typeparam>
            <param name="controllerFactory">The controller factory method.</param>
            <exception cref="T:System.ArgumentException">Controller types must be unique within the module.</exception>
        </member>
        <member name="M:Unosquare.Labs.EmbedIO.Modules.WebApiModule.RegisterController(System.Type)">
            <summary>
            Registers the controller.
            </summary>
            <param name="controllerType">Type of the controller.</param>
        </member>
        <member name="M:Unosquare.Labs.EmbedIO.Modules.WebApiModule.RegisterController(System.Type,System.Func{Unosquare.Labs.EmbedIO.IHttpContext,System.Object})">
            <summary>
            Registers the controller.
            </summary>
            <param name="controllerType">Type of the controller.</param>
            <param name="controllerFactory">The controller factory method.</param>
        </member>
        <member name="M:Unosquare.Labs.EmbedIO.Modules.WebApiModule.NormalizeRegexPath(Unosquare.Labs.EmbedIO.Constants.HttpVerbs,Unosquare.Labs.EmbedIO.IHttpContext,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Normalizes a path meant for Regex matching, extracts the route parameters, and returns the registered
            path in the internal delegate map.
            </summary>
            <param name="verb">The verb.</param>
            <param name="context">The context.</param>
            <param name="routeParams">The route parameters.</param>
            <returns>A string that represents the registered path in the internal delegate map.</returns>
        </member>
        <member name="M:Unosquare.Labs.EmbedIO.Modules.WebApiModule.NormalizeWildcardPath(Unosquare.Labs.EmbedIO.Constants.HttpVerbs,Unosquare.Labs.EmbedIO.IHttpContext)">
            <summary>
            Normalizes a URL request path meant for Wildcard matching and returns the registered
            path in the internal delegate map.
            </summary>
            <param name="verb">The verb.</param>
            <param name="context">The context.</param>
            <returns>A string that represents the registered path.</returns>
        </member>
        <member name="M:Unosquare.Labs.EmbedIO.Modules.WebApiModule.IsMethodNotAllowed(Unosquare.Labs.EmbedIO.IHttpContext)">
            <summary>
            Looks for a path that matches the one provided by the context.
            </summary>
            <param name="context"> The HttpListener context.</param>
            <returns><c>true</c> if the path is found, otherwise <c>false</c>.</returns>
        </member>
        <member name="T:Unosquare.Labs.EmbedIO.Modules.WebSocketHandlerAttribute">
            <summary>
            Decorate methods within controllers with this attribute in order to make them callable from the Web API Module
            Method Must match the WebServerModule.
            </summary>
        </member>
        <member name="M:Unosquare.Labs.EmbedIO.Modules.WebSocketHandlerAttribute.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Unosquare.Labs.EmbedIO.Modules.WebSocketHandlerAttribute"/> class.
            </summary>
            <param name="path">The path.</param>
            <exception cref="T:System.ArgumentException">The argument 'paths' must be specified.</exception>
        </member>
        <member name="P:Unosquare.Labs.EmbedIO.Modules.WebSocketHandlerAttribute.Path">
            <summary>
            Gets or sets the path.
            </summary>
            <value>
            The paths.
            </value>
        </member>
        <member name="T:Unosquare.Labs.EmbedIO.Modules.WebSocketsModule">
            <summary>
            A WebSockets module conforming to RFC 6455.
            </summary>
        </member>
        <member name="F:Unosquare.Labs.EmbedIO.Modules.WebSocketsModule._serverMap">
            <summary>
            Holds the collection of paths and WebSockets Servers registered.
            </summary>
        </member>
        <member name="M:Unosquare.Labs.EmbedIO.Modules.WebSocketsModule.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Unosquare.Labs.EmbedIO.Modules.WebSocketsModule"/> class.
            </summary>
        </member>
        <member name="P:Unosquare.Labs.EmbedIO.Modules.WebSocketsModule.Name">
            <inheritdoc />
        </member>
        <member name="M:Unosquare.Labs.EmbedIO.Modules.WebSocketsModule.RegisterWebSocketsServer``1">
            <summary>
            Registers the web sockets server given a WebSocketsServer Type.
            </summary>
            <typeparam name="T">The type of WebSocket server.</typeparam>
            <exception cref="T:System.ArgumentException">Argument 'path' cannot be null;path.</exception>
        </member>
        <member name="M:Unosquare.Labs.EmbedIO.Modules.WebSocketsModule.RegisterWebSocketsServer(System.Type)">
            <summary>
            Registers the web sockets server given a WebSocketsServer Type.
            </summary>
            <param name="socketType">Type of the socket.</param>
            <exception cref="T:System.ArgumentNullException">socketType.</exception>
            <exception cref="T:System.ArgumentException">Argument 'socketType' needs a WebSocketHandlerAttribute - socketType.</exception>
        </member>
        <member name="M:Unosquare.Labs.EmbedIO.Modules.WebSocketsModule.RegisterWebSocketsServer``1(System.String)">
            <summary>
            Registers the web sockets server given a WebSocketsServer Type.
            </summary>
            <typeparam name="T">The type of WebSocket server.</typeparam>
            <param name="path">The path. For example: '/echo'.</param>
            <exception cref="T:System.ArgumentException">Argument 'path' cannot be null;path.</exception>
        </member>
        <member name="M:Unosquare.Labs.EmbedIO.Modules.WebSocketsModule.RegisterWebSocketsServer``1(System.String,``0)">
            <summary>
            Registers the web sockets server.
            </summary>
            <typeparam name="T">The type of WebSocket server.</typeparam>
            <param name="path">The path. For example: '/echo'.</param>
            <param name="server">The server.</param>
            <exception cref="T:System.ArgumentNullException">
            path
            or
            server.
            </exception>
        </member>
        <member name="M:Unosquare.Labs.EmbedIO.Modules.WebSocketsModule.RunWatchdog">
            <inheritdoc />
        </member>
        <member name="M:Unosquare.Labs.EmbedIO.Modules.WebSocketsModule.NormalizeRegexPath(Unosquare.Labs.EmbedIO.IHttpContext)">
            <summary>
            Normalizes a path meant for Regex matching returns the registered
            path in the internal map.
            </summary>
            <param name="context">The context.</param>
            <returns>A string that represents the registered path in the internal map.</returns>
        </member>
        <member name="T:Unosquare.Labs.EmbedIO.Modules.WebSocketsServer">
            <inheritdoc />
            <summary>
            A base class that defines how to handle WebSockets connections.
            It keeps a list of connected WebSockets and has the basic logic to handle connections
            and data transmission.
            </summary>
        </member>
        <member name="M:Unosquare.Labs.EmbedIO.Modules.WebSocketsServer.#ctor(System.Boolean,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Unosquare.Labs.EmbedIO.Modules.WebSocketsServer" /> class.
            </summary>
            <param name="enableConnectionWatchdog">if set to <c>true</c> [enable connection watchdog].</param>
            <param name="maxMessageSize">Maximum size of the message in bytes. Enter 0 or negative number to prevent checks.</param>
        </member>
        <member name="M:Unosquare.Labs.EmbedIO.Modules.WebSocketsServer.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Unosquare.Labs.EmbedIO.Modules.WebSocketsServer"/> class. With dead connection watchdog and no message size checks.
            </summary>
        </member>
        <member name="P:Unosquare.Labs.EmbedIO.Modules.WebSocketsServer.WebSockets">
            <summary>
            Gets the Currently-Connected WebSockets.
            </summary>
            <value>
            The web sockets.
            </value>
        </member>
        <member name="P:Unosquare.Labs.EmbedIO.Modules.WebSocketsServer.CancellationToken">
            <summary>
            Gets or sets the cancellation token.
            </summary>
            <value>
            The cancellation token.
            </value>
        </member>
        <member name="P:Unosquare.Labs.EmbedIO.Modules.WebSocketsServer.ServerName">
            <summary>
            Gets the name of the server.
            </summary>
            <value>
            The name of the server.
            </value>
        </member>
        <member name="P:Unosquare.Labs.EmbedIO.Modules.WebSocketsServer.Encoding">
            <summary>
            Gets the Encoding used to use the Send method to send a string. The default is UTF8 per the WebSocket specification.
            </summary>
            <value>
            The Encoding to be used.
            </value>
        </member>
        <member name="M:Unosquare.Labs.EmbedIO.Modules.WebSocketsServer.AcceptWebSocket(Unosquare.Labs.EmbedIO.IHttpContext,System.Threading.CancellationToken)">
            <summary>
            Accepts the WebSocket connection.
            This is a blocking call so it must be called within an independent thread.
            </summary>
            <param name="context">The context.</param>
            <param name="ct">The cancellation token.</param>
            <returns>A task that represents the asynchronous of websocket connection operation.</returns>
        </member>
        <member name="M:Unosquare.Labs.EmbedIO.Modules.WebSocketsServer.Dispose">
            <inheritdoc />
        </member>
        <member name="M:Unosquare.Labs.EmbedIO.Modules.WebSocketsServer.Send(Unosquare.Labs.EmbedIO.IWebSocketContext,System.String)">
            <summary>
            Sends a UTF-8 payload.
            </summary>
            <param name="webSocket">The web socket.</param>
            <param name="payload">The payload.</param>
        </member>
        <member name="M:Unosquare.Labs.EmbedIO.Modules.WebSocketsServer.Send(Unosquare.Labs.EmbedIO.IWebSocketContext,System.Byte[])">
            <summary>
            Sends a binary payload.
            </summary>
            <param name="webSocket">The web socket.</param>
            <param name="payload">The payload.</param>
        </member>
        <member name="M:Unosquare.Labs.EmbedIO.Modules.WebSocketsServer.Broadcast(System.Byte[])">
            <summary>
            Broadcasts the specified payload to all connected WebSockets clients.
            </summary>
            <param name="payload">The payload.</param>
        </member>
        <member name="M:Unosquare.Labs.EmbedIO.Modules.WebSocketsServer.Broadcast(System.String)">
            <summary>
            Broadcasts the specified payload to all connected WebSockets clients.
            </summary>
            <param name="payload">The payload.</param>
        </member>
        <member name="M:Unosquare.Labs.EmbedIO.Modules.WebSocketsServer.Close(Unosquare.Labs.EmbedIO.IWebSocketContext)">
            <summary>
            Closes the specified web socket, removes it and disposes it.
            </summary>
            <param name="webSocket">The web socket.</param>
        </member>
        <member name="M:Unosquare.Labs.EmbedIO.Modules.WebSocketsServer.OnMessageReceived(Unosquare.Labs.EmbedIO.IWebSocketContext,System.Byte[],Unosquare.Labs.EmbedIO.IWebSocketReceiveResult)">
            <summary>
            Called when this WebSockets Server receives a full message (EndOfMessage) form a WebSockets client.
            </summary>
            <param name="context">The context.</param>
            <param name="buffer">The buffer.</param>
            <param name="result">The result.</param>
        </member>
        <member name="M:Unosquare.Labs.EmbedIO.Modules.WebSocketsServer.OnFrameReceived(Unosquare.Labs.EmbedIO.IWebSocketContext,System.Byte[],Unosquare.Labs.EmbedIO.IWebSocketReceiveResult)">
            <summary>
            Called when this WebSockets Server receives a message frame regardless if the frame represents the EndOfMessage.
            </summary>
            <param name="context">The context.</param>
            <param name="buffer">The buffer.</param>
            <param name="result">The result.</param>
        </member>
        <member name="M:Unosquare.Labs.EmbedIO.Modules.WebSocketsServer.OnClientConnected(Unosquare.Labs.EmbedIO.IWebSocketContext,System.Net.IPEndPoint,System.Net.IPEndPoint)">
            <summary>
            Called when this WebSockets Server accepts a new WebSockets client.
            </summary>
            <param name="context">The context.</param>
            <param name="localEndPoint">The local endpoint.</param>
            <param name="remoteEndPoint">The remote endpoint.</param>
        </member>
        <member name="M:Unosquare.Labs.EmbedIO.Modules.WebSocketsServer.OnClientDisconnected(Unosquare.Labs.EmbedIO.IWebSocketContext)">
            <summary>
            Called when the server has removed a WebSockets connected client for any reason.
            </summary>
            <param name="context">The context.</param>
        </member>
        <member name="M:Unosquare.Labs.EmbedIO.Modules.WebSocketsServer.Dispose(System.Boolean)">
            <summary>
            Releases unmanaged and - optionally - managed resources.
            </summary>
            <param name="disposeAll"><c>true</c> to release both managed and unmanaged resources; <c>false</c> to release only unmanaged resources.</param>
        </member>
        <member name="M:Unosquare.Labs.EmbedIO.Modules.WebSocketsServer.RunConnectionWatchdog">
            <summary>
            Runs the connection watchdog.
            Removes and disposes stale WebSockets connections every 10 minutes.
            </summary>
        </member>
        <member name="M:Unosquare.Labs.EmbedIO.Modules.WebSocketsServer.RemoveWebSocket(Unosquare.Labs.EmbedIO.IWebSocketContext)">
            <summary>
            Removes and disposes the web socket.
            </summary>
            <param name="webSocketContext">The web socket context.</param>
        </member>
        <member name="M:Unosquare.Labs.EmbedIO.Modules.WebSocketsServer.CollectDisconnected">
            <summary>
            Removes and disposes all disconnected sockets.
            </summary>
        </member>
        <member name="T:Unosquare.Labs.EmbedIO.SessionInfo">
            <summary>
            Represents the contents of an HTTP Session.
            </summary>
        </member>
        <member name="M:Unosquare.Labs.EmbedIO.SessionInfo.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Unosquare.Labs.EmbedIO.SessionInfo"/> class.
            </summary>
            <param name="sessionId">The session identifier.</param>
        </member>
        <member name="P:Unosquare.Labs.EmbedIO.SessionInfo.SessionId">
            <summary>
            Current Session Identifier.
            </summary>
        </member>
        <member name="P:Unosquare.Labs.EmbedIO.SessionInfo.DateCreated">
            <summary>
            Gets or sets the date created.
            </summary>
            <value>
            The date created.
            </value>
        </member>
        <member name="P:Unosquare.Labs.EmbedIO.SessionInfo.LastActivity">
            <summary>
            Gets or sets the last activity.
            </summary>
            <value>
            The last activity.
            </value>
        </member>
        <member name="P:Unosquare.Labs.EmbedIO.SessionInfo.Data">
            <summary>
            Current Session Data Repository.
            </summary>
        </member>
        <member name="P:Unosquare.Labs.EmbedIO.SessionInfo.Item(System.String)">
            <summary>
            Retrieve an item or set an item. If the key does not exist, it returns null.
            This is an indexer providing a shortcut to the underlying Data dictionary.
            </summary>
            <param name="key">The key as an indexer.</param>
            <returns>An object that represents current session data repository.</returns>
        </member>
        <member name="T:Unosquare.Labs.EmbedIO.Tests.TestHttpClient">
            <summary>
            Represents a HTTP Client for unit testing.
            </summary>
            <seealso cref="T:Unosquare.Labs.EmbedIO.IHttpContext" />
        </member>
        <member name="M:Unosquare.Labs.EmbedIO.Tests.TestHttpClient.#ctor(Unosquare.Labs.EmbedIO.IWebServer,System.Text.Encoding)">
            <summary>
            Initializes a new instance of the <see cref="T:Unosquare.Labs.EmbedIO.Tests.TestHttpClient" /> class.
            </summary>
            <param name="server">The server.</param>
            <param name="encoding">The encoding.</param>
        </member>
        <member name="P:Unosquare.Labs.EmbedIO.Tests.TestHttpClient.WebServer">
            <summary>
            Gets or sets the web server.
            </summary>
            <value>
            The web server.
            </value>
        </member>
        <member name="P:Unosquare.Labs.EmbedIO.Tests.TestHttpClient.Encoding">
            <summary>
            Gets or sets the encoding.
            </summary>
            <value>
            The encoding.
            </value>
        </member>
        <member name="M:Unosquare.Labs.EmbedIO.Tests.TestHttpClient.GetAsync(System.String)">
            <summary>
            Gets the asynchronous.
            </summary>
            <param name="url">The URL.</param>
            <returns>
            A task representing the GET call.
            </returns>
        </member>
        <member name="M:Unosquare.Labs.EmbedIO.Tests.TestHttpClient.SendAsync(Unosquare.Labs.EmbedIO.Tests.TestHttpRequest)">
            <summary>
            Sends the HTTP request asynchronous.
            </summary>
            <param name="request">The request.</param>
            <returns>A task representing the HTTP response.</returns>
            <exception cref="T:System.InvalidOperationException">The IWebServer implementation should be TestWebServer.</exception>
        </member>
        <member name="T:Unosquare.Labs.EmbedIO.Tests.TestHttpContext">
            <summary>
            Represents a Test Http Context.
            </summary>
            <seealso cref="T:Unosquare.Labs.EmbedIO.IHttpContext" />
        </member>
        <member name="M:Unosquare.Labs.EmbedIO.Tests.TestHttpContext.#ctor(Unosquare.Labs.EmbedIO.IHttpRequest,Unosquare.Labs.EmbedIO.IWebServer)">
            <summary>
            Initializes a new instance of the <see cref="T:Unosquare.Labs.EmbedIO.Tests.TestHttpContext"/> class.
            </summary>
            <param name="request">The request.</param>
            <param name="webserver">The webserver.</param>
        </member>
        <member name="P:Unosquare.Labs.EmbedIO.Tests.TestHttpContext.Request">
            <inheritdoc />
        </member>
        <member name="P:Unosquare.Labs.EmbedIO.Tests.TestHttpContext.Response">
            <inheritdoc />
        </member>
        <member name="P:Unosquare.Labs.EmbedIO.Tests.TestHttpContext.User">
            <inheritdoc />
        </member>
        <member name="P:Unosquare.Labs.EmbedIO.Tests.TestHttpContext.WebServer">
            <inheritdoc />
        </member>
        <member name="M:Unosquare.Labs.EmbedIO.Tests.TestHttpContext.AcceptWebSocketAsync(System.Int32)">
            <inheritdoc />
        </member>
        <member name="T:Unosquare.Labs.EmbedIO.Tests.TestHttpRequest">
            <summary>
            Represents an <c>IHttpRequest</c> implementation for unit testing.
            </summary>
            <seealso cref="T:Unosquare.Labs.EmbedIO.IHttpRequest" />
        </member>
        <member name="M:Unosquare.Labs.EmbedIO.Tests.TestHttpRequest.#ctor(Unosquare.Labs.EmbedIO.Constants.HttpVerbs)">
            <summary>
            Initializes a new instance of the <see cref="T:Unosquare.Labs.EmbedIO.Tests.TestHttpRequest"/> class.
            </summary>
            <param name="httpMethod">The HTTP method.</param>
        </member>
        <member name="M:Unosquare.Labs.EmbedIO.Tests.TestHttpRequest.#ctor(System.String,Unosquare.Labs.EmbedIO.Constants.HttpVerbs)">
            <summary>
            Initializes a new instance of the <see cref="T:Unosquare.Labs.EmbedIO.Tests.TestHttpRequest" /> class.
            </summary>
            <param name="url">The URL.</param>
            <param name="httpMethod">The HTTP method.</param>
        </member>
        <member name="P:Unosquare.Labs.EmbedIO.Tests.TestHttpRequest.Headers">
            <inheritdoc />
        </member>
        <member name="P:Unosquare.Labs.EmbedIO.Tests.TestHttpRequest.ProtocolVersion">
            <inheritdoc />
        </member>
        <member name="P:Unosquare.Labs.EmbedIO.Tests.TestHttpRequest.KeepAlive">
            <inheritdoc />
        </member>
        <member name="P:Unosquare.Labs.EmbedIO.Tests.TestHttpRequest.Cookies">
            <inheritdoc />
        </member>
        <member name="P:Unosquare.Labs.EmbedIO.Tests.TestHttpRequest.RawUrl">
            <inheritdoc />
        </member>
        <member name="P:Unosquare.Labs.EmbedIO.Tests.TestHttpRequest.QueryString">
            <inheritdoc />
        </member>
        <member name="P:Unosquare.Labs.EmbedIO.Tests.TestHttpRequest.HttpMethod">
            <inheritdoc />
        </member>
        <member name="P:Unosquare.Labs.EmbedIO.Tests.TestHttpRequest.Url">
            <inheritdoc />
        </member>
        <member name="P:Unosquare.Labs.EmbedIO.Tests.TestHttpRequest.HasEntityBody">
            <inheritdoc />
        </member>
        <member name="P:Unosquare.Labs.EmbedIO.Tests.TestHttpRequest.InputStream">
            <inheritdoc />
        </member>
        <member name="P:Unosquare.Labs.EmbedIO.Tests.TestHttpRequest.ContentEncoding">
            <inheritdoc />
        </member>
        <member name="P:Unosquare.Labs.EmbedIO.Tests.TestHttpRequest.RemoteEndPoint">
            <inheritdoc />
        </member>
        <member name="P:Unosquare.Labs.EmbedIO.Tests.TestHttpRequest.IsLocal">
            <inheritdoc />
        </member>
        <member name="P:Unosquare.Labs.EmbedIO.Tests.TestHttpRequest.UserAgent">
            <inheritdoc />
        </member>
        <member name="P:Unosquare.Labs.EmbedIO.Tests.TestHttpRequest.IsWebSocketRequest">
            <inheritdoc />
        </member>
        <member name="P:Unosquare.Labs.EmbedIO.Tests.TestHttpRequest.LocalEndPoint">
            <inheritdoc />
        </member>
        <member name="P:Unosquare.Labs.EmbedIO.Tests.TestHttpRequest.ContentType">
            <inheritdoc />
        </member>
        <member name="P:Unosquare.Labs.EmbedIO.Tests.TestHttpRequest.ContentLength64">
            <inheritdoc />
        </member>
        <member name="P:Unosquare.Labs.EmbedIO.Tests.TestHttpRequest.IsAuthenticated">
            <inheritdoc />
        </member>
        <member name="P:Unosquare.Labs.EmbedIO.Tests.TestHttpRequest.UrlReferrer">
            <inheritdoc />
        </member>
        <member name="P:Unosquare.Labs.EmbedIO.Tests.TestHttpRequest.RequestTraceIdentifier">
            <inheritdoc />
        </member>
        <member name="T:Unosquare.Labs.EmbedIO.Tests.TestHttpResponse">
            <summary>
            Represents an <c>IHttpResponse</c> implementation for unit testing.
            </summary>
            <seealso cref="T:Unosquare.Labs.EmbedIO.IHttpResponse" />
        </member>
        <member name="P:Unosquare.Labs.EmbedIO.Tests.TestHttpResponse.Headers">
            <inheritdoc />
        </member>
        <member name="P:Unosquare.Labs.EmbedIO.Tests.TestHttpResponse.StatusCode">
            <inheritdoc />
        </member>
        <member name="P:Unosquare.Labs.EmbedIO.Tests.TestHttpResponse.ContentLength64">
            <inheritdoc />
        </member>
        <member name="P:Unosquare.Labs.EmbedIO.Tests.TestHttpResponse.ContentType">
            <inheritdoc />
        </member>
        <member name="P:Unosquare.Labs.EmbedIO.Tests.TestHttpResponse.OutputStream">
            <inheritdoc />
        </member>
        <member name="P:Unosquare.Labs.EmbedIO.Tests.TestHttpResponse.Cookies">
            <inheritdoc />
        </member>
        <member name="P:Unosquare.Labs.EmbedIO.Tests.TestHttpResponse.ContentEncoding">
            <inheritdoc />
        </member>
        <member name="P:Unosquare.Labs.EmbedIO.Tests.TestHttpResponse.KeepAlive">
            <inheritdoc />
        </member>
        <member name="P:Unosquare.Labs.EmbedIO.Tests.TestHttpResponse.ProtocolVersion">
            <inheritdoc />
        </member>
        <member name="P:Unosquare.Labs.EmbedIO.Tests.TestHttpResponse.Body">
            <summary>
            Gets the body.
            </summary>
            <value>
            The body.
            </value>
        </member>
        <member name="P:Unosquare.Labs.EmbedIO.Tests.TestHttpResponse.StatusDescription">
            <inheritdoc />
        </member>
        <member name="M:Unosquare.Labs.EmbedIO.Tests.TestHttpResponse.AddHeader(System.String,System.String)">
            <inheritdoc />
        </member>
        <member name="M:Unosquare.Labs.EmbedIO.Tests.TestHttpResponse.SetCookie(System.Net.Cookie)">
            <inheritdoc />
        </member>
        <member name="M:Unosquare.Labs.EmbedIO.Tests.TestHttpResponse.Close">
            <inheritdoc />
        </member>
        <member name="M:Unosquare.Labs.EmbedIO.Tests.TestHttpResponse.Dispose">
            <inheritdoc />
        </member>
        <member name="M:Unosquare.Labs.EmbedIO.Tests.TestHttpResponse.GetBodyAsString(System.Text.Encoding)">
            <summary>
            Gets the body as string.
            </summary>
            <param name="encoding">The encoding.</param>
            <returns>A string from the body.</returns>
        </member>
        <member name="T:Unosquare.Labs.EmbedIO.Tests.TestWebServer">
             <summary>
             Represents our tiny web server used to handle requests for testing.
            
             Use this <c>IWebServer</c> implementation to run your unit tests.
             </summary>
        </member>
        <member name="M:Unosquare.Labs.EmbedIO.Tests.TestWebServer.#ctor(Unosquare.Labs.EmbedIO.Constants.RoutingStrategy)">
            <summary>
            Initializes a new instance of the <see cref="T:Unosquare.Labs.EmbedIO.Tests.TestWebServer"/> class.
            </summary>
            <param name="routingStrategy">The routing strategy.</param>
        </member>
        <member name="P:Unosquare.Labs.EmbedIO.Tests.TestWebServer.SessionModule">
            <inheritdoc />
        </member>
        <member name="P:Unosquare.Labs.EmbedIO.Tests.TestWebServer.RoutingStrategy">
            <inheritdoc />
        </member>
        <member name="P:Unosquare.Labs.EmbedIO.Tests.TestWebServer.Modules">
            <inheritdoc />
        </member>
        <member name="P:Unosquare.Labs.EmbedIO.Tests.TestWebServer.OnMethodNotAllowed">
            <inheritdoc />
        </member>
        <member name="P:Unosquare.Labs.EmbedIO.Tests.TestWebServer.OnNotFound">
            <inheritdoc />
        </member>
        <member name="P:Unosquare.Labs.EmbedIO.Tests.TestWebServer.HttpContexts">
            <summary>
            Gets the HTTP contexts.
            </summary>
            <value>
            The HTTP contexts.
            </value>
        </member>
        <member name="M:Unosquare.Labs.EmbedIO.Tests.TestWebServer.Module``1">
            <inheritdoc />
        </member>
        <member name="M:Unosquare.Labs.EmbedIO.Tests.TestWebServer.RegisterModule(Unosquare.Labs.EmbedIO.IWebModule)">
            <inheritdoc />
        </member>
        <member name="M:Unosquare.Labs.EmbedIO.Tests.TestWebServer.UnregisterModule(System.Type)">
            <inheritdoc />
        </member>
        <member name="M:Unosquare.Labs.EmbedIO.Tests.TestWebServer.RunAsync(System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Unosquare.Labs.EmbedIO.Tests.TestWebServer.GetClient">
            <summary>
            Gets the test HTTP Client.
            </summary>
            <returns>A new instance of the TestHttpClient.</returns>
        </member>
        <member name="T:Unosquare.Labs.EmbedIO.WebHandler">
            <summary>
            Represents a Web Handler.
            </summary>
            <param name="context">The context.</param>
            <param name="ct">The cancellation token.</param>
            <returns>A task representing the success of the web handler.</returns>
        </member>
        <member name="T:Unosquare.Labs.EmbedIO.WebModuleBase">
            <summary>
            Base class to define custom web modules.
            Inherit from this class and use the AddHandler Method to register your method calls.
            </summary>
        </member>
        <member name="M:Unosquare.Labs.EmbedIO.WebModuleBase.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Unosquare.Labs.EmbedIO.WebModuleBase"/> class.
            </summary>
        </member>
        <member name="P:Unosquare.Labs.EmbedIO.WebModuleBase.Name">
            <inheritdoc/>
        </member>
        <member name="P:Unosquare.Labs.EmbedIO.WebModuleBase.Handlers">
            <inheritdoc/>
        </member>
        <member name="P:Unosquare.Labs.EmbedIO.WebModuleBase.Server">
            <inheritdoc/>
        </member>
        <member name="P:Unosquare.Labs.EmbedIO.WebModuleBase.IsWatchdogEnabled">
            <inheritdoc/>
        </member>
        <member name="P:Unosquare.Labs.EmbedIO.WebModuleBase.WatchdogInterval">
            <inheritdoc/>
        </member>
        <member name="P:Unosquare.Labs.EmbedIO.WebModuleBase.CancellationToken">
            <inheritdoc />
        </member>
        <member name="M:Unosquare.Labs.EmbedIO.WebModuleBase.AddHandler(System.String,Unosquare.Labs.EmbedIO.Constants.HttpVerbs,Unosquare.Labs.EmbedIO.WebHandler)">
            <inheritdoc/>
        </member>
        <member name="M:Unosquare.Labs.EmbedIO.WebModuleBase.Start(System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Unosquare.Labs.EmbedIO.WebModuleBase.RunWatchdog">
            <inheritdoc/>
        </member>
        <member name="T:Unosquare.Labs.EmbedIO.WebServer">
             <summary>
             Represents our tiny web server used to handle requests.
            
             This is the default implementation of <c>IWebServer</c> and it's ready to select
             the <c>IHttpListener</c> implementation via the proper constructor.
            
             By default, the WebServer will use the Regex RoutingStrategy for
             all registered modules (<c>IWebModule</c>) and EmbedIO Listener (<c>HttpListenerMode</c>).
             </summary>
        </member>
        <member name="M:Unosquare.Labs.EmbedIO.WebServer.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:Unosquare.Labs.EmbedIO.WebServer"/> class.
            
             Default settings are Regex RoutingStrategy, EmbedIO HttpListenerMode, and binding all
             network interfaces with HTTP protocol and default port (http://*:80/).
             </summary>
        </member>
        <member name="M:Unosquare.Labs.EmbedIO.WebServer.#ctor(System.Int32,Unosquare.Labs.EmbedIO.Constants.RoutingStrategy)">
            <summary>
            Initializes a new instance of the <see cref="T:Unosquare.Labs.EmbedIO.WebServer"/> class.
            
            Default settings are Regex RoutingStrategy, EmbedIO HttpListenerMode, and binding all
            network interfaces with HTTP protocol with the selected port (http://*:{port}/).
            </summary>
            <param name="port">The port.</param>
            <param name="strategy">The strategy.</param>
        </member>
        <member name="M:Unosquare.Labs.EmbedIO.WebServer.#ctor(System.String,Unosquare.Labs.EmbedIO.Constants.RoutingStrategy)">
             <summary>
             Initializes a new instance of the <see cref="T:Unosquare.Labs.EmbedIO.WebServer" /> class.
            
             Default settings are Regex RoutingStrategy and EmbedIO HttpListenerMode.
             </summary>
             <remarks>
             <c>urlPrefix</c> must be specified as something similar to: http://localhost:9696/
             Please notice the ending slash. -- It is important.
             </remarks>
             <param name="urlPrefix">The URL prefix.</param>
             <param name="strategy">The strategy.</param>
        </member>
        <member name="M:Unosquare.Labs.EmbedIO.WebServer.#ctor(System.String[],Unosquare.Labs.EmbedIO.Constants.RoutingStrategy)">
             <summary>
             Initializes a new instance of the <see cref="T:Unosquare.Labs.EmbedIO.WebServer"/> class.
            
             Default settings are Regex RoutingStrategy and EmbedIO HttpListenerMode.
             </summary>
             <remarks>
             <c>urlPrefixes</c> must be specified as something similar to: http://localhost:9696/
             Please notice the ending slash. -- It is important.
             </remarks>
             <param name="urlPrefixes">The URL prefix.</param>
             <param name="routingStrategy">The routing strategy.</param>
             <exception cref="T:System.ArgumentException">Argument urlPrefix must be specified.</exception>
        </member>
        <member name="M:Unosquare.Labs.EmbedIO.WebServer.#ctor(System.String[],Unosquare.Labs.EmbedIO.Constants.RoutingStrategy,Unosquare.Labs.EmbedIO.HttpListenerMode)">
            <summary>
            Initializes a new instance of the <see cref="T:Unosquare.Labs.EmbedIO.WebServer" /> class.
            </summary>
            <param name="urlPrefixes">The URL prefix.</param>
            <param name="routingStrategy">The routing strategy.</param>
            <param name="mode">The mode.</param>
            <exception cref="T:System.ArgumentException">Argument urlPrefix must be specified.</exception>
            <remarks>
            <c>urlPrefixes</c> must be specified as something similar to: http://localhost:9696/
            Please notice the ending slash. -- It is important.
            </remarks>
        </member>
        <member name="M:Unosquare.Labs.EmbedIO.WebServer.#ctor(System.String[],Unosquare.Labs.EmbedIO.Constants.RoutingStrategy,Unosquare.Labs.EmbedIO.HttpListenerMode,System.Security.Cryptography.X509Certificates.X509Certificate)">
            <summary>
            Initializes a new instance of the <see cref="T:Unosquare.Labs.EmbedIO.WebServer" /> class.
            </summary>
            <param name="urlPrefixes">The URL prefix.</param>
            <param name="routingStrategy">The routing strategy.</param>
            <param name="mode">The mode.</param>
            <param name="certificate">The certificate.</param>
            <exception cref="T:System.ArgumentException">Argument urlPrefix must be specified.</exception>
            <remarks>
            <c>urlPrefixes</c> must be specified as something similar to: http://localhost:9696/
            Please notice the ending slash. -- It is important.
            </remarks>
        </member>
        <member name="M:Unosquare.Labs.EmbedIO.WebServer.#ctor(Unosquare.Labs.EmbedIO.WebServerOptions)">
            <summary>
            Initializes a new instance of the <see cref="T:Unosquare.Labs.EmbedIO.WebServer"/> class.
            </summary>
            <param name="options">The WebServer options.</param>
        </member>
        <member name="M:Unosquare.Labs.EmbedIO.WebServer.#ctor(System.String[],Unosquare.Labs.EmbedIO.Constants.RoutingStrategy,Unosquare.Labs.EmbedIO.IHttpListener)">
            <summary>
            Initializes a new instance of the <see cref="T:Unosquare.Labs.EmbedIO.WebServer" /> class.
            </summary>
            <param name="urlPrefixes">The URL prefix.</param>
            <param name="routingStrategy">The routing strategy.</param>
            <param name="httpListener">The HTTP listener.</param>
            <exception cref="T:System.ArgumentException">Argument urlPrefix must be specified.</exception>
            <remarks>
            <c>urlPrefixes</c> must be specified as something similar to: http://localhost:9696/
            Please notice the ending slash. -- It is important.
            </remarks>
        </member>
        <member name="P:Unosquare.Labs.EmbedIO.WebServer.OnMethodNotAllowed">
            <inheritdoc />
        </member>
        <member name="P:Unosquare.Labs.EmbedIO.WebServer.OnNotFound">
            <inheritdoc />
        </member>
        <member name="P:Unosquare.Labs.EmbedIO.WebServer.Listener">
            <summary>
            Gets the underlying HTTP listener.
            </summary>
            <value>
            The listener.
            </value>
        </member>
        <member name="P:Unosquare.Labs.EmbedIO.WebServer.UrlPrefixes">
            <summary>
            Gets the URL Prefix for which the server is serving requests.
            </summary>
            <value>
            The URL prefix.
            </value>
        </member>
        <member name="P:Unosquare.Labs.EmbedIO.WebServer.Modules">
            <inheritdoc />
        </member>
        <member name="P:Unosquare.Labs.EmbedIO.WebServer.SessionModule">
            <inheritdoc />
        </member>
        <member name="P:Unosquare.Labs.EmbedIO.WebServer.RoutingStrategy">
            <inheritdoc />
        </member>
        <member name="M:Unosquare.Labs.EmbedIO.WebServer.Create(System.String)">
            <summary>
            Static method to create webserver instance using a single URL prefix.
            </summary>
            <param name="urlPrefix">The URL prefix.</param>
            <returns>The webserver instance.</returns>
        </member>
        <member name="M:Unosquare.Labs.EmbedIO.WebServer.Module``1">
            <inheritdoc />
        </member>
        <member name="M:Unosquare.Labs.EmbedIO.WebServer.RegisterModule(Unosquare.Labs.EmbedIO.IWebModule)">
            <inheritdoc />
        </member>
        <member name="M:Unosquare.Labs.EmbedIO.WebServer.UnregisterModule(System.Type)">
            <inheritdoc/>
        </member>
        <member name="M:Unosquare.Labs.EmbedIO.WebServer.RunAsync(System.Threading.CancellationToken)">
            <inheritdoc />
            <exception cref="T:System.InvalidOperationException">The method was already called.</exception>
            <exception cref="T:System.OperationCanceledException">Cancellation was requested.</exception>
            <remarks>
            Both the server and client requests are queued separately on the thread pool,
            so it is safe to call <see cref="M:System.Threading.Tasks.Task.Wait" /> in a synchronous method.
            </remarks>
        </member>
        <member name="M:Unosquare.Labs.EmbedIO.WebServer.Dispose">
            <inheritdoc />
        </member>
        <member name="M:Unosquare.Labs.EmbedIO.WebServer.Dispose(System.Boolean)">
            <summary>
            Releases unmanaged and - optionally - managed resources.
            </summary>
            <param name="disposing">
              <c>true</c> to release both managed and unmanaged resources; <c>false</c> to release only unmanaged resources.
            </param>
        </member>
        <member name="T:Unosquare.Labs.EmbedIO.WebServerOptions">
            <summary>
            Options for WebServer creation.
            </summary>
        </member>
        <member name="M:Unosquare.Labs.EmbedIO.WebServerOptions.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Unosquare.Labs.EmbedIO.WebServerOptions" /> class.
            </summary>
            <param name="urlPrefix">The URL prefix.</param>
        </member>
        <member name="M:Unosquare.Labs.EmbedIO.WebServerOptions.#ctor(System.String[])">
            <summary>
            Initializes a new instance of the <see cref="T:Unosquare.Labs.EmbedIO.WebServerOptions"/> class.
            </summary>
            <param name="urlPrefixes">The urls.</param>
        </member>
        <member name="P:Unosquare.Labs.EmbedIO.WebServerOptions.UrlPrefixes">
            <summary>
            Gets the URL prefixes.
            </summary>
            <value>
            The URL prefixes.
            </value>
        </member>
        <member name="P:Unosquare.Labs.EmbedIO.WebServerOptions.RoutingStrategy">
            <summary>
            Gets or sets the routing strategy.
            </summary>
            <value>
            The routing strategy.
            </value>
        </member>
        <member name="P:Unosquare.Labs.EmbedIO.WebServerOptions.Mode">
            <summary>
            Gets or sets the mode.
            </summary>
            <value>
            The mode.
            </value>
        </member>
        <member name="P:Unosquare.Labs.EmbedIO.WebServerOptions.Certificate">
            <summary>
            Gets or sets the certificate.
            </summary>
            <value>
            The certificate.
            </value>
        </member>
        <member name="P:Unosquare.Labs.EmbedIO.WebServerOptions.CertificateThumb">
            <summary>
            Gets or sets the certificate thumb.
            </summary>
            <value>
            The certificate thumb.
            </value>
        </member>
        <member name="P:Unosquare.Labs.EmbedIO.WebServerOptions.AutoLoadCertificate">
            <summary>
            Gets or sets a value indicating whether [automatic load certificate].
            </summary>
            <value>
              <c>true</c> if [automatic load certificate]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Unosquare.Labs.EmbedIO.WebServerOptions.AutoRegisterCertificate">
            <summary>
            Gets or sets a value indicating whether [automatic register certificate].
            </summary>
            <value>
              <c>true</c> if [automatic register certificate]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Unosquare.Labs.EmbedIO.WebServerOptions.StoreName">
            <summary>
            Gets or sets the name of the store.
            </summary>
            <value>
            The name of the store.
            </value>
        </member>
        <member name="P:Unosquare.Labs.EmbedIO.WebServerOptions.StoreLocation">
            <summary>
            Gets or sets the store location.
            </summary>
            <value>
            The store location.
            </value>
        </member>
        <member name="T:Unosquare.Labs.EmbedIO.WebSocket">
            <summary>
            Represents a wrapper around a regular WebSocketContext.
            </summary>
            <inheritdoc />
        </member>
        <member name="M:Unosquare.Labs.EmbedIO.WebSocket.#ctor(System.Net.WebSockets.WebSocket)">
            <summary>
            Initializes a new instance of the <see cref="T:Unosquare.Labs.EmbedIO.WebSocket"/> class.
            </summary>
            <param name="webSocket">The web socket.</param>
        </member>
        <member name="P:Unosquare.Labs.EmbedIO.WebSocket.SystemWebSocket">
            <summary>
            Gets the real WebSocket object from System.Net.
            </summary>
            <value>
            The system web socket.
            </value>
        </member>
        <member name="P:Unosquare.Labs.EmbedIO.WebSocket.State">
            <inheritdoc />
        </member>
        <member name="M:Unosquare.Labs.EmbedIO.WebSocket.System#IDisposable#Dispose">
            <inheritdoc />
        </member>
        <member name="M:Unosquare.Labs.EmbedIO.WebSocket.SendAsync(System.Byte[],System.Boolean,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Unosquare.Labs.EmbedIO.WebSocket.CloseAsync(System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="T:Unosquare.Labs.EmbedIO.WebSocketContext">
            <summary>
            Represents a wrapper around a regular WebSocketContext.
            </summary>
        </member>
        <member name="M:Unosquare.Labs.EmbedIO.WebSocketContext.#ctor(System.Net.WebSockets.HttpListenerWebSocketContext)">
            <summary>
            Initializes a new instance of the <see cref="T:Unosquare.Labs.EmbedIO.WebSocketContext"/> class.
            </summary>
            <param name="webSocketContext">The web socket context.</param>
        </member>
        <member name="P:Unosquare.Labs.EmbedIO.WebSocketContext.WebSocket">
            <inheritdoc />
        </member>
        <member name="P:Unosquare.Labs.EmbedIO.WebSocketContext.CookieCollection">
            <inheritdoc />
        </member>
        <member name="P:Unosquare.Labs.EmbedIO.WebSocketContext.RequestUri">
            <inheritdoc />
        </member>
        <member name="T:Unosquare.Labs.EmbedIO.WebSocketReceiveResult">
            <summary>
            Represents a wrapper around a regular WebSocketContext.
            </summary>
            <inheritdoc />
        </member>
        <member name="M:Unosquare.Labs.EmbedIO.WebSocketReceiveResult.#ctor(System.Net.WebSockets.WebSocketReceiveResult)">
            <summary>
            Initializes a new instance of the <see cref="T:Unosquare.Labs.EmbedIO.WebSocketReceiveResult"/> class.
            </summary>
            <param name="results">The results.</param>
        </member>
        <member name="P:Unosquare.Labs.EmbedIO.WebSocketReceiveResult.Count">
            <inheritdoc/>
        </member>
        <member name="P:Unosquare.Labs.EmbedIO.WebSocketReceiveResult.EndOfMessage">
            <inheritdoc/>
        </member>
        <member name="P:Unosquare.Labs.EmbedIO.WebSocketReceiveResult.MessageType">
            <inheritdoc/>
        </member>
        <member name="T:Unosquare.Net.CloseStatusCode">
            <summary>
            Indicates the status code for the WebSocket connection close.
            </summary>
            <remarks>
              <para>
              The values of this enumeration are defined in
              <see href="http://tools.ietf.org/html/rfc6455#section-7.4">Section 7.4</see> of RFC 6455.
              </para>
              <para>
              "Reserved value" must not be set as a status code in a connection close frame by
              an endpoint. It's designated for use in applications expecting a status code to
              indicate that the connection was closed due to the system grounds.
              </para>
            </remarks>
        </member>
        <member name="F:Unosquare.Net.CloseStatusCode.Normal">
            <summary>
            Equivalent to close status 1000. Indicates normal close.
            </summary>
        </member>
        <member name="F:Unosquare.Net.CloseStatusCode.Away">
            <summary>
            Equivalent to close status 1001. Indicates that an endpoint is going away.
            </summary>
        </member>
        <member name="F:Unosquare.Net.CloseStatusCode.ProtocolError">
            <summary>
            Equivalent to close status 1002. Indicates that an endpoint is terminating
            the connection due to a protocol error.
            </summary>
        </member>
        <member name="F:Unosquare.Net.CloseStatusCode.UnsupportedData">
            <summary>
            Equivalent to close status 1003. Indicates that an endpoint is terminating
            the connection because it has received a type of data that it cannot accept.
            </summary>
        </member>
        <member name="F:Unosquare.Net.CloseStatusCode.Undefined">
            <summary>
            Equivalent to close status 1004. Still undefined. A Reserved value.
            </summary>
        </member>
        <member name="F:Unosquare.Net.CloseStatusCode.NoStatus">
            <summary>
            Equivalent to close status 1005. Indicates that no status code was actually present.
            A Reserved value.
            </summary>
        </member>
        <member name="F:Unosquare.Net.CloseStatusCode.Abnormal">
            <summary>
            Equivalent to close status 1006. Indicates that the connection was closed abnormally.
            A Reserved value.
            </summary>
        </member>
        <member name="F:Unosquare.Net.CloseStatusCode.InvalidData">
            <summary>
            Equivalent to close status 1007. Indicates that an endpoint is terminating
            the connection because it has received a message that contains data that
            isn't consistent with the type of the message.
            </summary>
        </member>
        <member name="F:Unosquare.Net.CloseStatusCode.PolicyViolation">
            <summary>
            Equivalent to close status 1008. Indicates that an endpoint is terminating
            the connection because it has received a message that violates its policy.
            </summary>
        </member>
        <member name="F:Unosquare.Net.CloseStatusCode.TooBig">
            <summary>
            Equivalent to close status 1009. Indicates that an endpoint is terminating
            the connection because it has received a message that is too big to process.
            </summary>
        </member>
        <member name="F:Unosquare.Net.CloseStatusCode.MandatoryExtension">
            <summary>
            Equivalent to close status 1010. Indicates that a client is terminating
            the connection because it has expected the server to negotiate one or more extension,
            but the server didn't return them in the handshake response.
            </summary>
        </member>
        <member name="F:Unosquare.Net.CloseStatusCode.ServerError">
            <summary>
            Equivalent to close status 1011. Indicates that a server is terminating
            the connection because it has encountered an unexpected condition that
            prevented it from fulfilling the request.
            </summary>
        </member>
        <member name="F:Unosquare.Net.CloseStatusCode.TlsHandshakeFailure">
            <summary>
            Equivalent to close status 1015. Indicates that the connection was closed
            due to a failure to perform a TLS handshake. A Reserved value.
            </summary>
        </member>
        <member name="T:Unosquare.Net.CookieCollection">
            <summary>
            Represents Cookie collection.
            </summary>
        </member>
        <member name="P:Unosquare.Net.CookieCollection.IsSynchronized">
            <inheritdoc />
        </member>
        <member name="P:Unosquare.Net.CookieCollection.SyncRoot">
            <inheritdoc />
        </member>
        <member name="P:Unosquare.Net.CookieCollection.Item(System.String)">
            <inheritdoc />
        </member>
        <member name="M:Unosquare.Net.CookieCollection.Add(System.Net.Cookie)">
            <inheritdoc />
        </member>
        <member name="M:Unosquare.Net.CookieCollection.CopyTo(System.Array,System.Int32)">
            <inheritdoc />
        </member>
        <member name="T:Unosquare.Net.EndPointManager">
            <summary>
            Represents the EndPoint Manager.
            </summary>
        </member>
        <member name="P:Unosquare.Net.EndPointManager.UseIpv6">
            <summary>
            Gets or sets a value indicating whether [use IPv6].
            </summary>
            <value>
              <c>true</c> if [use IPv6]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="T:Unosquare.Net.HttpListener">
             <summary>
             The EmbedIO implementation of the standard HTTP Listener class.
            
             Based on MONO HttpListener class.
             </summary>
             <seealso cref="T:System.IDisposable" />
        </member>
        <member name="M:Unosquare.Net.HttpListener.#ctor(System.Security.Cryptography.X509Certificates.X509Certificate)">
            <summary>
            Initializes a new instance of the <see cref="T:Unosquare.Net.HttpListener" /> class.
            </summary>
            <param name="certificate">The certificate.</param>
        </member>
        <member name="P:Unosquare.Net.HttpListener.IgnoreWriteExceptions">
            <inheritdoc />
        </member>
        <member name="P:Unosquare.Net.HttpListener.IsListening">
            <inheritdoc />
        </member>
        <member name="P:Unosquare.Net.HttpListener.Certificate">
            <summary>
            Gets the certificate.
            </summary>
            <value>
            The certificate.
            </value>
        </member>
        <member name="P:Unosquare.Net.HttpListener.Name">
            <inheritdoc />
        </member>
        <member name="P:Unosquare.Net.HttpListener.Prefixes">
            <inheritdoc />
        </member>
        <member name="M:Unosquare.Net.HttpListener.Start">
            <inheritdoc />
        </member>
        <member name="M:Unosquare.Net.HttpListener.Stop">
            <inheritdoc />
        </member>
        <member name="M:Unosquare.Net.HttpListener.AddPrefix(System.String)">
            <inheritdoc />
        </member>
        <member name="M:Unosquare.Net.HttpListener.Dispose">
            <inheritdoc />
        </member>
        <member name="M:Unosquare.Net.HttpListener.GetContextAsync(System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="T:Unosquare.Net.HttpListenerContext">
            <summary>
            Provides access to the request and response objects used by the HttpListener class.
            This class cannot be inherited.
            </summary>
        </member>
        <member name="P:Unosquare.Net.HttpListenerContext.Request">
            <inheritdoc />
        </member>
        <member name="P:Unosquare.Net.HttpListenerContext.Response">
            <inheritdoc />
        </member>
        <member name="P:Unosquare.Net.HttpListenerContext.User">
            <inheritdoc />
        </member>
        <member name="P:Unosquare.Net.HttpListenerContext.WebServer">
            <inheritdoc />
        </member>
        <member name="M:Unosquare.Net.HttpListenerContext.AcceptWebSocketAsync(System.Int32)">
            <inheritdoc />
        </member>
        <member name="T:Unosquare.Net.HttpListenerException">
            <summary>
            Represents an HTTP Listener's exception.
            </summary>
        </member>
        <member name="P:Unosquare.Net.HttpListenerException.ErrorCode">
            <summary>
            Gets the error code.
            </summary>
        </member>
        <member name="T:Unosquare.Net.HttpListenerRequest">
            <summary>
            Represents an HTTP Listener Request.
            </summary>
        </member>
        <member name="P:Unosquare.Net.HttpListenerRequest.AcceptTypes">
            <summary>
            Gets the MIME accept types.
            </summary>
            <value>
            The accept types.
            </value>
        </member>
        <member name="P:Unosquare.Net.HttpListenerRequest.ContentEncoding">
            <inheritdoc />
        </member>
        <member name="P:Unosquare.Net.HttpListenerRequest.ContentLength64">
            <inheritdoc />
        </member>
        <member name="P:Unosquare.Net.HttpListenerRequest.ContentType">
            <inheritdoc />
        </member>
        <member name="P:Unosquare.Net.HttpListenerRequest.Cookies">
            <inheritdoc />
        </member>
        <member name="P:Unosquare.Net.HttpListenerRequest.HasEntityBody">
            <inheritdoc />
        </member>
        <member name="P:Unosquare.Net.HttpListenerRequest.Headers">
            <inheritdoc />
        </member>
        <member name="P:Unosquare.Net.HttpListenerRequest.HttpMethod">
            <inheritdoc />
        </member>
        <member name="P:Unosquare.Net.HttpListenerRequest.InputStream">
            <inheritdoc />
        </member>
        <member name="P:Unosquare.Net.HttpListenerRequest.IsAuthenticated">
            <inheritdoc />
        </member>
        <member name="P:Unosquare.Net.HttpListenerRequest.IsLocal">
            <inheritdoc />
        </member>
        <member name="P:Unosquare.Net.HttpListenerRequest.IsSecureConnection">
            <summary>
            Gets a value indicating whether this request is under a secure connection.
            </summary>
        </member>
        <member name="P:Unosquare.Net.HttpListenerRequest.KeepAlive">
            <inheritdoc />
        </member>
        <member name="P:Unosquare.Net.HttpListenerRequest.LocalEndPoint">
            <inheritdoc />
        </member>
        <member name="P:Unosquare.Net.HttpListenerRequest.ProtocolVersion">
            <inheritdoc />
        </member>
        <member name="P:Unosquare.Net.HttpListenerRequest.QueryString">
            <inheritdoc />
        </member>
        <member name="P:Unosquare.Net.HttpListenerRequest.RawUrl">
            <inheritdoc />
        </member>
        <member name="P:Unosquare.Net.HttpListenerRequest.RemoteEndPoint">
            <inheritdoc />
        </member>
        <member name="P:Unosquare.Net.HttpListenerRequest.Url">
            <inheritdoc />
        </member>
        <member name="P:Unosquare.Net.HttpListenerRequest.UrlReferrer">
            <inheritdoc />
        </member>
        <member name="P:Unosquare.Net.HttpListenerRequest.UserAgent">
            <inheritdoc />
        </member>
        <member name="P:Unosquare.Net.HttpListenerRequest.RequestTraceIdentifier">
            <inheritdoc />
        </member>
        <member name="P:Unosquare.Net.HttpListenerRequest.IsWebSocketRequest">
            <inheritdoc />
        </member>
        <member name="M:Unosquare.Net.HttpListenerRequest.BeginGetClientCertificate(System.AsyncCallback,System.Object)">
            <summary>
            Begins to the get client certificate asynchronously.
            </summary>
            <param name="requestCallback">The request callback.</param>
            <param name="state">The state.</param>
            <returns></returns>
        </member>
        <member name="M:Unosquare.Net.HttpListenerRequest.EndGetClientCertificate(System.IAsyncResult)">
            <summary>
            Finishes the get client certificate asynchronous operation.
            </summary>
            <param name="asyncResult">The asynchronous result.</param>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException">asyncResult</exception>
            <exception cref="T:System.InvalidOperationException"></exception>
        </member>
        <member name="M:Unosquare.Net.HttpListenerRequest.GetClientCertificate">
            <summary>
            Gets the client certificate.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Unosquare.Net.HttpVersion">
            <summary>
            Define HTTP Versions.
            </summary>
        </member>
        <member name="F:Unosquare.Net.HttpVersion.Version10">
            <summary>
            The version 1.0.
            </summary>
        </member>
        <member name="F:Unosquare.Net.HttpVersion.Version11">
            <summary>
            The version 1.1.
            </summary>
        </member>
        <member name="T:Unosquare.Net.HttpListenerResponse">
            <summary>
            Represents an HTTP Listener's response.
            </summary>
            <seealso cref="T:System.IDisposable" />
        </member>
        <member name="P:Unosquare.Net.HttpListenerResponse.ContentEncoding">
            <inheritdoc />
        </member>
        <member name="P:Unosquare.Net.HttpListenerResponse.ContentLength64">
            <inheritdoc />
        </member>
        <member name="P:Unosquare.Net.HttpListenerResponse.ContentType">
            <inheritdoc />
        </member>
        <member name="P:Unosquare.Net.HttpListenerResponse.Cookies">
            <inheritdoc />
        </member>
        <member name="P:Unosquare.Net.HttpListenerResponse.Headers">
            <inheritdoc />
        </member>
        <member name="P:Unosquare.Net.HttpListenerResponse.KeepAlive">
            <inheritdoc />
        </member>
        <member name="P:Unosquare.Net.HttpListenerResponse.OutputStream">
            <inheritdoc />
        </member>
        <member name="P:Unosquare.Net.HttpListenerResponse.ProtocolVersion">
            <inheritdoc />
        </member>
        <member name="P:Unosquare.Net.HttpListenerResponse.SendChunked">
            <summary>
            Gets or sets a value indicating whether [send chunked].
            </summary>
            <value>
              <c>true</c> if [send chunked]; otherwise, <c>false</c>.
            </value>
            <exception cref="T:System.ObjectDisposedException">
            Is thrown when you try to access a member of an object that implements the 
            IDisposable interface, and that object has been disposed.
            </exception>
            <exception cref="T:System.InvalidOperationException">Cannot be changed after headers are sent.</exception>
        </member>
        <member name="P:Unosquare.Net.HttpListenerResponse.StatusCode">
            <inheritdoc />
        </member>
        <member name="P:Unosquare.Net.HttpListenerResponse.StatusDescription">
            <inheritdoc />
        </member>
        <member name="M:Unosquare.Net.HttpListenerResponse.AddHeader(System.String,System.String)">
            <inheritdoc />
        </member>
        <member name="M:Unosquare.Net.HttpListenerResponse.SetCookie(System.Net.Cookie)">
            <inheritdoc />
        </member>
        <member name="T:Unosquare.Net.MessageEventArgs">
            <summary>
            Represents the event data for the <see cref="E:Unosquare.Net.WebSocket.OnMessage"/> event.
            </summary>
            <remarks>
              <para>
              That event occurs when the <see cref="T:Unosquare.Net.WebSocket"/> receives
              a message or a ping if the <see cref="P:Unosquare.Net.WebSocket.EmitOnPing"/>
              property is set to <c>true</c>.
              </para>
              <para>
              If you would like to get the message data, you should access
              the <see cref="P:Unosquare.Net.MessageEventArgs.Data"/> or <see cref="P:Unosquare.Net.MessageEventArgs.RawData"/> property.
              </para>
            </remarks>
        </member>
        <member name="P:Unosquare.Net.MessageEventArgs.Data">
            <summary>
            Gets the message data as a <see cref="T:System.String"/>.
            </summary>
            <value>
            A <see cref="T:System.String"/> that represents the message data if its type is
            text or ping and if decoding it to a string has successfully done;
            otherwise, <see langword="null"/>.
            </value>
        </member>
        <member name="P:Unosquare.Net.MessageEventArgs.IsBinary">
            <summary>
            Gets a value indicating whether the message type is binary.
            </summary>
            <value>
            <c>true</c> if the message type is binary; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Unosquare.Net.MessageEventArgs.IsPing">
            <summary>
            Gets a value indicating whether the message type is ping.
            </summary>
            <value>
            <c>true</c> if the message type is ping; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Unosquare.Net.MessageEventArgs.IsText">
            <summary>
            Gets a value indicating whether the message type is text.
            </summary>
            <value>
            <c>true</c> if the message type is text; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Unosquare.Net.MessageEventArgs.RawData">
            <summary>
            Gets the message data as an array of <see cref="T:System.Byte"/>.
            </summary>
            <value>
            An array of <see cref="T:System.Byte"/> that represents the message data.
            </value>
        </member>
        <member name="T:Unosquare.Net.NetExtensions">
            <summary>
            Represents some System.NET custom extensions.
            </summary>
        </member>
        <member name="T:Unosquare.Net.Opcode">
            <summary>
            Indicates the WebSocket frame type.
            </summary>
            <remarks>
            The values of this enumeration are defined in
            <see href="http://tools.ietf.org/html/rfc6455#section-5.2">
            Section 5.2</see> of RFC 6455.
            </remarks>
        </member>
        <member name="F:Unosquare.Net.Opcode.Cont">
            <summary>
            Equivalent to numeric value 0. Indicates continuation frame.
            </summary>
        </member>
        <member name="F:Unosquare.Net.Opcode.Text">
            <summary>
            Equivalent to numeric value 1. Indicates text frame.
            </summary>
        </member>
        <member name="F:Unosquare.Net.Opcode.Binary">
            <summary>
            Equivalent to numeric value 2. Indicates binary frame.
            </summary>
        </member>
        <member name="F:Unosquare.Net.Opcode.Close">
            <summary>
            Equivalent to numeric value 8. Indicates connection close frame.
            </summary>
        </member>
        <member name="F:Unosquare.Net.Opcode.Ping">
            <summary>
            Equivalent to numeric value 9. Indicates ping frame.
            </summary>
        </member>
        <member name="F:Unosquare.Net.Opcode.Pong">
            <summary>
            Equivalent to numeric value 10. Indicates pong frame.
            </summary>
        </member>
        <member name="P:Unosquare.Net.ResponseStream.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Unosquare.Net.ResponseStream.CanSeek">
            <inheritdoc />
        </member>
        <member name="P:Unosquare.Net.ResponseStream.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Unosquare.Net.ResponseStream.Length">
            <inheritdoc />
        </member>
        <member name="P:Unosquare.Net.ResponseStream.Position">
            <inheritdoc />
        </member>
        <member name="M:Unosquare.Net.ResponseStream.Flush">
            <inheritdoc />
        </member>
        <member name="M:Unosquare.Net.ResponseStream.Write(System.Byte[],System.Int32,System.Int32)">
            <inheritdoc />
        </member>
        <member name="M:Unosquare.Net.ResponseStream.Read(System.Byte[],System.Int32,System.Int32)">
            <inheritdoc />
        </member>
        <member name="M:Unosquare.Net.ResponseStream.Seek(System.Int64,System.IO.SeekOrigin)">
            <inheritdoc />
        </member>
        <member name="M:Unosquare.Net.ResponseStream.SetLength(System.Int64)">
            <inheritdoc />
        </member>
        <member name="F:Unosquare.Net.HttpHeaderType.Unspecified">
            <summary>
            The unspecified
            </summary>
        </member>
        <member name="F:Unosquare.Net.HttpHeaderType.Request">
            <summary>
            The request
            </summary>
        </member>
        <member name="F:Unosquare.Net.HttpHeaderType.Response">
            <summary>
            The response
            </summary>
        </member>
        <member name="F:Unosquare.Net.HttpHeaderType.Restricted">
            <summary>
            The restricted
            </summary>
        </member>
        <member name="F:Unosquare.Net.HttpHeaderType.MultiValue">
            <summary>
            The multi-value
            </summary>
        </member>
        <member name="F:Unosquare.Net.HttpHeaderType.MultiValueInRequest">
            <summary>
            The multi-value in request
            </summary>
        </member>
        <member name="F:Unosquare.Net.HttpHeaderType.MultiValueInResponse">
            <summary>
            The multi-value in response
            </summary>
        </member>
        <member name="T:Unosquare.Net.WebSocket">
            <summary>
            Implements the WebSocket interface.
            </summary>
            <remarks>
            The WebSocket class provides a set of methods and properties for two-way communication using
            the WebSocket protocol (<see href="http://tools.ietf.org/html/rfc6455">RFC 6455</see>).
            </remarks>
        </member>
        <member name="M:Unosquare.Net.WebSocket.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Unosquare.Net.WebSocket" /> class with
            the specified WebSocket URL.
            </summary>
            <param name="url">A <see cref="T:System.String" /> that represents the WebSocket URL to connect.</param>
            <exception cref="T:System.ArgumentNullException">url.</exception>
            <exception cref="T:System.ArgumentException">
            An empty string. - url
            or
            url
            or
            protocols.
            </exception>
            <exception cref="T:System.ArgumentNullException"><paramref name="url" /> is <see langword="null" />.</exception>
            <exception cref="T:System.ArgumentException"><para>
              <paramref name="url" /> is invalid.
            </para>
            <para>
            -or-
            </para></exception>
        </member>
        <member name="E:Unosquare.Net.WebSocket.OnMessage">
            <summary>
            Occurs when the <see cref="T:Unosquare.Net.WebSocket"/> receives a message.
            </summary>
        </member>
        <member name="P:Unosquare.Net.WebSocket.Compression">
            <summary>
            Gets or sets the compression method used to compress a message on the WebSocket connection.
            </summary>
            <value>
            One of the <see cref="T:Unosquare.Labs.EmbedIO.Constants.CompressionMethod"/> enum values, specifies the compression method
            used to compress a message. The default value is <see cref="F:Unosquare.Labs.EmbedIO.Constants.CompressionMethod.None"/>.
            </value>
        </member>
        <member name="P:Unosquare.Net.WebSocket.Cookies">
            <summary>
            Gets the HTTP cookies included in the WebSocket handshake request and response.
            </summary>
            <value>
            An <see cref="T:System.Collections.Generic.IEnumerable{WebSocketSharp.Net.Cookie}"/>
            instance that provides an enumerator which supports the iteration over the collection of
            the cookies.
            </value>
        </member>
        <member name="P:Unosquare.Net.WebSocket.EmitOnPing">
            <summary>
            Gets or sets a value indicating whether the <see cref="T:Unosquare.Net.WebSocket"/> emits
            a <see cref="E:Unosquare.Net.WebSocket.OnMessage"/> event when receives a ping.
            </summary>
            <value>
            <c>true</c> if the <see cref="T:Unosquare.Net.WebSocket"/> emits a <see cref="E:Unosquare.Net.WebSocket.OnMessage"/> event
            when receives a ping; otherwise, <c>false</c>. The default value is <c>false</c>.
            </value>
        </member>
        <member name="P:Unosquare.Net.WebSocket.EnableRedirection">
            <summary>
            Gets or sets a value indicating whether the <see cref="T:Unosquare.Net.WebSocket"/> redirects
            the handshake request to the new URL located in the handshake response.
            </summary>
            <value>
            <c>true</c> if the <see cref="T:Unosquare.Net.WebSocket"/> redirects the handshake request to
            the new URL; otherwise, <c>false</c>. The default value is <c>false</c>.
            </value>
        </member>
        <member name="P:Unosquare.Net.WebSocket.Extensions">
            <summary>
            Gets the WebSocket extensions selected by the server.
            </summary>
            <value>
            A <see cref="T:System.String"/> that represents the extensions if any.
            The default value is <see cref="F:System.String.Empty"/>.
            </value>
        </member>
        <member name="P:Unosquare.Net.WebSocket.IsAlive">
            <summary>
            Gets a value indicating whether the WebSocket connection is alive.
            </summary>
            <value>
            <c>true</c> if the connection is alive; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Unosquare.Net.WebSocket.IsSecure">
            <summary>
            Gets a value indicating whether the WebSocket connection is secure.
            </summary>
            <value>
            <c>true</c> if the connection is secure; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Unosquare.Net.WebSocket.Origin">
            <summary>
            Gets or sets the value of the HTTP Origin header to send with
            the WebSocket handshake request to the server.
            </summary>
            <remarks>
            The <see cref="T:Unosquare.Net.WebSocket"/> sends the Origin header if this property has any.
            </remarks>
            <value>
              <para>
              A <see cref="T:System.String"/> that represents the value of
              the <see href="http://tools.ietf.org/html/rfc6454#section-7">Origin</see> header to send.
              The default value is <see langword="null"/>.
              </para>
              <para>
              The Origin header has the following syntax:
              <c>&lt;scheme&gt;://&lt;host&gt;[:&lt;port&gt;]</c>.
              </para>
            </value>
        </member>
        <member name="P:Unosquare.Net.WebSocket.State">
            <inheritdoc />
        </member>
        <member name="P:Unosquare.Net.WebSocket.Url">
            <summary>
            Gets the WebSocket URL used to connect, or accepted.
            </summary>
            <value>
            A <see cref="T:System.Uri"/> that represents the URL used to connect, or accepted.
            </value>
        </member>
        <member name="P:Unosquare.Net.WebSocket.WaitTime">
            <summary>
            Gets or sets the wait time for the response to the Ping or Close.
            </summary>
            <value>
            A <see cref="T:System.TimeSpan"/> that represents the wait time. The default value is the same as
            5 seconds, or 1 second if the <see cref="T:Unosquare.Net.WebSocket"/> is used in a server.
            </value>
        </member>
        <member name="M:Unosquare.Net.WebSocket.SendAsync(System.Byte[],System.Boolean,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Unosquare.Net.WebSocket.CloseAsync(System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Unosquare.Net.WebSocket.CloseAsync(Unosquare.Net.CloseStatusCode,System.String,System.Threading.CancellationToken)">
            <summary>
            Closes the WebSocket connection asynchronously, and releases
            all associated resources.
            </summary>
            <param name="code">The code.</param>
            <param name="reason">The reason.</param>
            <param name="ct">The cancellation token.</param>
            <returns>
            A task that represents the asynchronous closes websocket connection.
            </returns>
        </member>
        <member name="M:Unosquare.Net.WebSocket.ConnectAsync(System.Threading.CancellationToken)">
            <summary>
            Establishes a WebSocket connection asynchronously.
            </summary>
            <param name="ct">The cancellation token.</param>
            <returns>
            If CheckIfAvailable statement terminates execution of the method; otherwise, 
            establishes a WebSocket connection.
            </returns>
            <remarks>
            <para>
            This method doesn't wait for the connect to be complete.
            </para>
            <para>
            This method isn't available in a server.
            </para></remarks>
        </member>
        <member name="M:Unosquare.Net.WebSocket.PingAsync">
            <summary>
            Sends a ping using the WebSocket connection.
            </summary>
            <returns>
            <c>true</c> if the <see cref="T:Unosquare.Net.WebSocket"/> receives a pong to this ping in a time;
            otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Unosquare.Net.WebSocket.PingAsync(System.String)">
            <summary>
            Sends a ping with the specified <paramref name="message"/> using the WebSocket connection.
            </summary>
            <returns>
            <c>true</c> if the <see cref="T:Unosquare.Net.WebSocket"/> receives a pong to this ping in a time;
            otherwise, <c>false</c>.
            </returns>
            <param name="message">
            A <see cref="T:System.String"/> that represents the message to send.
            </param>
        </member>
        <member name="M:Unosquare.Net.WebSocket.SendAsync(System.Byte[],Unosquare.Net.Opcode,System.Threading.CancellationToken)">
            <summary>
            Sends binary <paramref name="data" /> using the WebSocket connection.
            </summary>
            <param name="data">An array of <see cref="T:System.Byte" /> that represents the binary data to send.</param>
            <param name="opcode">The opcode.</param>
            <param name="ct">The cancellation token.</param>
            <returns>
            A task that represents the asynchronous of send 
            binary data using websocket.
            </returns>
        </member>
        <member name="M:Unosquare.Net.WebSocket.SetCookie(System.Net.Cookie)">
            <summary>
            Sets an HTTP <paramref name="cookie"/> to send with
            the WebSocket handshake request to the server.
            </summary>
            <param name="cookie">
            A <see cref="T:System.Net.Cookie"/> that represents a cookie to send.
            </param>
        </member>
        <member name="M:Unosquare.Net.WebSocket.System#IDisposable#Dispose">
            <inheritdoc />
        </member>
        <member name="T:Unosquare.Net.WebSocketContext">
            <summary>
            Provides the properties used to access the information in
            a WebSocket handshake request received by the <see cref="T:Unosquare.Net.HttpListener" />.
            </summary>
            <seealso cref="T:Unosquare.Labs.EmbedIO.IWebSocketContext" />
        </member>
        <member name="P:Unosquare.Net.WebSocketContext.CookieCollection">
            <inheritdoc />
        </member>
        <member name="P:Unosquare.Net.WebSocketContext.Headers">
            <summary>
            Gets the HTTP headers included in the request.
            </summary>
            <value>
            A <see cref="T:System.Collections.Specialized.NameValueCollection"/> that contains the headers.
            </value>
        </member>
        <member name="P:Unosquare.Net.WebSocketContext.IsLocal">
            <summary>
            Gets a value indicating whether the client connected from the local computer.
            </summary>
            <value>
            <c>true</c> if the client connected from the local computer; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Unosquare.Net.WebSocketContext.IsSecureConnection">
            <summary>
            Gets a value indicating whether the WebSocket connection is secured.
            </summary>
            <value>
            <c>true</c> if the connection is secured; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Unosquare.Net.WebSocketContext.IsWebSocketRequest">
            <summary>
            Gets a value indicating whether the request is a WebSocket handshake request.
            </summary>
            <value>
            <c>true</c> if the request is a WebSocket handshake request; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Unosquare.Net.WebSocketContext.Origin">
            <summary>
            Gets the value of the Origin header included in the request.
            </summary>
            <value>
            A <see cref="T:System.String"/> that represents the value of the Origin header.
            </value>
        </member>
        <member name="P:Unosquare.Net.WebSocketContext.RequestUri">
            <summary>
            Gets the URI requested by the client.
            </summary>
            <value>
            A <see cref="T:System.Uri"/> that represents the requested URI.
            </value>
        </member>
        <member name="P:Unosquare.Net.WebSocketContext.SecWebSocketKey">
            <summary>
            Gets the value of the Sec-WebSocket-Key header included in the request.
            </summary>
            <remarks>
            This property provides a part of the information used by the server to prove that
            it received a valid WebSocket handshake request.
            </remarks>
            <value>
            A <see cref="T:System.String"/> that represents the value of the Sec-WebSocket-Key header.
            </value>
        </member>
        <member name="P:Unosquare.Net.WebSocketContext.SecWebSocketVersion">
            <summary>
            Gets the value of the Sec-WebSocket-Version header included in the request.
            </summary>
            <remarks>
            This property represents the WebSocket protocol version.
            </remarks>
            <value>
            A <see cref="T:System.String"/> that represents the value of the Sec-WebSocket-Version header.
            </value>
        </member>
        <member name="P:Unosquare.Net.WebSocketContext.WebSocket">
            <inheritdoc />
        </member>
        <member name="M:Unosquare.Net.WebSocketContext.ToString">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String" /> that represents this instance.
            </returns>
        </member>
        <member name="T:Unosquare.Net.WebSocketException">
            <summary>
            The exception that is thrown when a <see cref="T:Unosquare.Net.WebSocket"/> gets a fatal error.
            </summary>
        </member>
        <member name="P:Unosquare.Net.WebSocketException.Code">
            <summary>
            Gets the status code indicating the cause of the exception.
            </summary>
            <value>
            One of the <see cref="T:Unosquare.Net.CloseStatusCode"/> enum values, represents the status code
            indicating the cause of the exception.
            </value>
        </member>
        <member name="T:Unosquare.Net.Fin">
            <summary>
            Indicates whether a WebSocket frame is the final frame of a message.
            </summary>
            <remarks>
            The values of this enumeration are defined in
            <see href="http://tools.ietf.org/html/rfc6455#section-5.2">Section 5.2</see> of RFC 6455.
            </remarks>
        </member>
        <member name="F:Unosquare.Net.Fin.More">
            <summary>
            Equivalent to numeric value 0. Indicates more frames of a message follow.
            </summary>
        </member>
        <member name="F:Unosquare.Net.Fin.Final">
            <summary>
            Equivalent to numeric value 1. Indicates the final frame of a message.
            </summary>
        </member>
        <member name="T:Unosquare.Net.Mask">
            <summary>
            Indicates whether the payload data of a WebSocket frame is masked.
            </summary>
            <remarks>
            The values of this enumeration are defined in
            <see href="http://tools.ietf.org/html/rfc6455#section-5.2">Section 5.2</see> of RFC 6455.
            </remarks>
        </member>
        <member name="F:Unosquare.Net.Mask.Off">
            <summary>
            Equivalent to numeric value 0. Indicates not masked.
            </summary>
        </member>
        <member name="F:Unosquare.Net.Mask.On">
            <summary>
            Equivalent to numeric value 1. Indicates masked.
            </summary>
        </member>
        <member name="T:Unosquare.Net.Rsv">
            <summary>
            Indicates whether each RSV (RSV1, RSV2, and RSV3) of a WebSocket frame is non-zero.
            </summary>
            <remarks>
            The values of this enumeration are defined in
            <see href="http://tools.ietf.org/html/rfc6455#section-5.2">Section 5.2</see> of RFC 6455.
            </remarks>
        </member>
        <member name="F:Unosquare.Net.Rsv.Off">
            <summary>
            Equivalent to numeric value 0. Indicates zero.
            </summary>
        </member>
        <member name="F:Unosquare.Net.Rsv.On">
            <summary>
            Equivalent to numeric value 1. Indicates non-zero.
            </summary>
        </member>
        <member name="T:Unosquare.Net.WebSocketReceiveResult">
            <summary>
            Represents a WS Receive result.
            </summary>
        </member>
        <member name="P:Unosquare.Net.WebSocketReceiveResult.Count">
            <inheritdoc />
        </member>
        <member name="P:Unosquare.Net.WebSocketReceiveResult.EndOfMessage">
            <inheritdoc />
        </member>
        <member name="P:Unosquare.Net.WebSocketReceiveResult.MessageType">
            <inheritdoc />
        </member>
        <member name="T:Unosquare.Net.WebSocketState">
            <summary>
            Indicates the state of a WebSocket connection.
            </summary>
            <remarks>
            The values of this enumeration are defined in
            <see href="http://www.w3.org/TR/websockets/#dom-websocket-readystate">The WebSocket API</see>.
            </remarks>
        </member>
        <member name="F:Unosquare.Net.WebSocketState.Connecting">
            <summary>
            Equivalent to numeric value 0. Indicates that the connection hasn't yet been established.
            </summary>
        </member>
        <member name="F:Unosquare.Net.WebSocketState.Open">
            <summary>
            Equivalent to numeric value 1. Indicates that the connection has been established,
            and the communication is possible.
            </summary>
        </member>
        <member name="F:Unosquare.Net.WebSocketState.Closing">
            <summary>
            Equivalent to numeric value 2. Indicates that the connection is going through
            the closing handshake, or the <c>WebSocket.Close</c> method has been invoked.
            </summary>
        </member>
        <member name="F:Unosquare.Net.WebSocketState.Closed">
            <summary>
            Equivalent to numeric value 3. Indicates that the connection has been closed or
            couldn't be established.
            </summary>
        </member>
    </members>
</doc>
